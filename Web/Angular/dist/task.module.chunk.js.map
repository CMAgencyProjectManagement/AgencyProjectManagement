{"version":3,"sources":["D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task-routing.module.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task.module.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.ts"],"names":[],"mappings":"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","file":"task.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <strong>Create task</strong>\\n      </div>\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body row\\\">\\n        <div [formGroup]=\\\"createForm\\\" class=\\\"form-horizontal col-lg-8 col-md-10 col-sm-12\\\">\\n          <div class=\\\"form-group row\\\">\\n            <!--NAME-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">\\n              Name <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <input type=\\\"text\\\" id=\\\"name-input\\\"\\n                     [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.name}\\\"\\n                     formControlName=\\\"name\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.name\\\">{{errors.name}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--Description-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"description-input\\\">\\n              Description\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <textarea id=\\\"description-input\\\"\\n                        rows=\\\"9\\\"\\n                        [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.description}\\\"\\n                        placeholder=\\\"Description..\\\"\\n                        formControlName=\\\"description\\\"></textarea>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.description\\\">{{errors.description}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--LIST-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"list-input\\\">\\n              List <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <select formControlName=\\\"list\\\" id=\\\"list-input\\\"\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\n                <option *ngFor=\\\"let list of foundProject.lists\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.list\\\">{{errors.list}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--priority-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"priority-input\\\">\\n              Priority <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <select formControlName=\\\"priority\\\" id=\\\"priority-input\\\"\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\n                <option *ngFor=\\\"let priority of priorities\\\" value=\\\"{{priority.key}}\\\">{{priority.value}}</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.priority\\\">{{errors.priority}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--Start date-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"startDate-input\\\">\\n              Start date <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8 datepicker-group\\\">\\n              <my-date-picker id=\\\"startDate-input\\\" #datepicker\\n                              [options]=\\\"myDatePickerOptions\\\"\\n                              formControlName=\\\"startDate\\\"\\n                              [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.startDate}\\\"\\n                              required></my-date-picker>\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.startDate\\\">\\n                {{errors.startDate}}\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--DURATION-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"duration-input\\\">\\n              Duration <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" id=\\\"duration-input\\\"\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.duration}\\\"\\n                       formControlName=\\\"duration\\\">\\n                <span class=\\\"input-group-addon\\\">day</span>\\n              </div>\\n\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.duration\\\">{{errors.duration}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--EFFORT-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"effort-input\\\">\\n              Effort <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" id=\\\"effort-input\\\"\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.effort}\\\"\\n                       formControlName=\\\"effort\\\">\\n                <span class=\\\"input-group-addon\\\">hour</span>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.effort\\\">{{errors.effort}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-actions text-center\\\">\\n            <!--BUTTON-->\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleCreateTask()\\\" [ladda]=\\\"isLoading.create\\\">\\n                Create\\n              </button>\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"setDefaultValue()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.html\n// module id = ../../../../../src/app/views/task/add/add.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".invalid-feedback {\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.scss\n// module id = ../../../../../src/app/views/task/add/add.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProjectService} from '../../../services/project.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as moment from 'moment';\nimport {\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport {IMyDpOptions} from 'mydatepicker';\nimport {List} from 'app/interfaces/list';\nimport {Task} from '../../../interfaces/task';\nimport {BsModalService} from 'ngx-bootstrap/modal';\nimport {ErrorModalComponent} from '../../../cmaComponents/modals';\nimport {TaskService} from '../../../services/task.service';\nimport {Location} from '@angular/common';\nimport {Project} from '../../../interfaces/project';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  isLoading: {\n    page: boolean,\n    create: boolean\n  };\n  errors: {\n    name: string,\n    description: string,\n    list: string,\n    priority: string,\n    startDate: string,\n    duration: string,\n    effort: string\n  };\n  @ViewChild('datepicker') datepicker;\n  foundProject: Project;\n  createForm: FormGroup;\n  priorities: any[];\n  public myDatePickerOptions: IMyDpOptions = {\n    // other options...\n    dateFormat: 'dd/mm/yyyy',\n    showInputField: true,\n    showTodayBtn: true\n  };\n\n  constructor(private taskService: TaskService,\n              private projectService: ProjectService,\n              private modalService: BsModalService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location) {\n    this.isLoading = {\n      page: true,\n      create: false\n    };\n    this.resetError();\n  }\n\n  ngOnInit() {\n    let projectId = this.route.snapshot.queryParamMap.get('projectID');\n    let listId = this.route.snapshot.queryParamMap.get('listID');\n\n    if (Number(projectId) && Number(listId)) {\n      this.projectService.getProject(Number(projectId))\n        .then(project => {\n          this.foundProject = project;\n          this.updatePageLoadingState();\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n        });\n      this.taskService.getPriorities()\n        .then(value => {\n          this.priorities = value;\n          this.updatePageLoadingState();\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n        })\n    } else {\n      this.showErrorModal(`Invalid address`, true);\n    }\n    this.createForm = new FormGroup({\n      name: new FormControl(undefined),\n      description: new FormControl(undefined),\n      list: new FormControl(undefined),\n      priority: new FormControl(undefined),\n      startDate: new FormControl(undefined),\n      duration: new FormControl(undefined),\n      effort: new FormControl(undefined)\n    })\n  }\n\n  updatePageLoadingState() {\n    if (this.foundProject &&\n      this.priorities) {\n      this.isLoading.page = false;\n    }\n  }\n\n  resetError() {\n    this.errors = {\n      name: '',\n      description: '',\n      list: '',\n      priority: '',\n      startDate: '',\n      duration: '',\n      effort: ''\n    };\n  }\n\n  setErrors(errors: any[]) {\n    for (let error of errors) {\n      const fieldName = error.key;\n      const errorMessage = error.message;\n      switch (fieldName) {\n        case 'Name':\n          this.errors.name = errorMessage;\n          break;\n        case 'Description':\n          this.errors.description = errorMessage;\n          break;\n        case 'ListID':\n          this.errors.effort = errorMessage;\n          break;\n        case 'Priority':\n          this.errors.priority = errorMessage;\n          break;\n        case 'StartDate':\n          this.errors.startDate = errorMessage;\n          break;\n        case 'Duration':\n          this.errors.duration = errorMessage;\n          break;\n        case 'Effort':\n          this.errors.effort = errorMessage;\n          break;\n      }\n    }\n  }\n\n  setDefaultValue() {\n    let now = moment();\n    this.createForm.patchValue({\n      name: '',\n      description: '',\n      list: '',\n      priority: '',\n      startDate: {\n        date: {\n          year: now.year(),\n          month: now.month() + 1,\n          day: now.day()\n        }\n      },\n      duration: '',\n      effort: '',\n    });\n  }\n\n  handleCreateTask() {\n    this.isLoading.create = true;\n    this.resetError();\n    const values = this.createForm.value;\n    let startDate = moment(this.datepicker.selectionDayTxt, 'DD/MM/YYYY');\n    this.taskService.createTask(\n      values.name,\n      values.description,\n      values.list,\n      values.priority,\n      startDate.isValid() ? startDate.format('YYYY-MM-DD') : this.datepicker.selectionDayTxt,\n      values.duration,\n      values.effort\n    ).then(value => {\n      this.isLoading.create = false;\n    }).catch(reason => {\n      this.setErrors(reason.Data);\n      this.isLoading.create = false;\n    })\n  }\n\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\n    const initialState = {\n      closeCallback: () => {\n        if (isNavigateBack) {\n          this.location.back();\n        }\n      },\n      message: message\n    };\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <strong>Update task</strong>\\n      </div>\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body row\\\">\\n        <div [formGroup]=\\\"updateForm\\\" class=\\\"form-horizontal col-lg-8 col-md-10 col-sm-12\\\">\\n          <div class=\\\"form-group row\\\">\\n            <!--NAME-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">\\n              Name <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <input type=\\\"text\\\" id=\\\"name-input\\\"\\n                     [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.name}\\\"\\n                     formControlName=\\\"name\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.name\\\">{{errors.name}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--Description-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"description-input\\\">\\n              Description\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <textarea id=\\\"description-input\\\"\\n                        rows=\\\"9\\\"\\n                        [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.description}\\\"\\n                        placeholder=\\\"Description..\\\"\\n                        formControlName=\\\"description\\\"></textarea>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.description\\\">{{errors.description}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--LIST-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"list-input\\\">\\n              List <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <select formControlName=\\\"list\\\" id=\\\"list-input\\\"\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\n                <option *ngFor=\\\"let list of lists\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.list\\\">{{errors.list}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--priority-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"priority-input\\\">\\n              Priority <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <select formControlName=\\\"priority\\\" id=\\\"priority-input\\\"\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\n                <option *ngFor=\\\"let priority of priorities\\\" value=\\\"{{priority.key}}\\\">{{priority.value}}</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.priority\\\">{{errors.priority}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--Start date-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"startDate-input\\\">\\n              Start date <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8 datepicker-group\\\">\\n              <my-date-picker id=\\\"startDate-input\\\" #datepicker\\n                              [options]=\\\"myDatePickerOptions\\\"\\n                              formControlName=\\\"startDate\\\"\\n                              [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.startDate}\\\"\\n                              required></my-date-picker>\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.startDate\\\">\\n                {{errors.startDate}}\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--DURATION-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"duration-input\\\">\\n              Duration <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" id=\\\"duration-input\\\"\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.duration}\\\"\\n                       formControlName=\\\"duration\\\">\\n                <span class=\\\"input-group-addon\\\">day</span>\\n              </div>\\n\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.duration\\\">{{errors.duration}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--EFFORT-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"effort-input\\\">\\n              Effort <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" id=\\\"effort-input\\\"\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.effort}\\\"\\n                       formControlName=\\\"effort\\\">\\n                <span class=\\\"input-group-addon\\\">hour</span>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.effort\\\">{{errors.effort}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-actions text-center\\\">\\n            <!--BUTTON-->\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleUpdateTask()\\\" [ladda]=\\\"isLoading.update\\\">\\n                Save changes\\n              </button>\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"setDefaultValue()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.html\n// module id = ../../../../../src/app/views/task/edit/edit.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".invalid-feedback {\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.scss\n// module id = ../../../../../src/app/views/task/edit/edit.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {TaskService} from '../../../services/task.service';\nimport {ErrorModalComponent} from '../../../cmaComponents/modals';\nimport {BsModalService} from 'ngx-bootstrap/modal';\nimport {Task} from '../../../interfaces/task';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ProjectService} from '../../../services/project.service';\nimport {List} from '../../../interfaces/list';\nimport {IMyDpOptions} from 'mydatepicker';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n  isLoading: {\n    page: boolean,\n    update: boolean\n  };\n  errors: {\n    name: string,\n    description: string,\n    list: string,\n    priority: string,\n    startDate: string,\n    duration: string,\n    effort: string\n  };\n  @ViewChild('datepicker') datepicker;\n  taskId: number;\n  foundTask: Task;\n  updateForm: FormGroup;\n  lists: List[];\n  priorities: any[];\n  public myDatePickerOptions: IMyDpOptions = {\n    // other options...\n    dateFormat: 'dd/mm/yyyy',\n    showInputField: true,\n    showTodayBtn: true\n  };\n\n  constructor(private taskService: TaskService,\n              private projectService: ProjectService,\n              private modalService: BsModalService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location) {\n    this.isLoading = {\n      page: true,\n      update: false\n    };\n    this.resetError();\n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.paramMap.get('id');\n    if (Number(id)) {\n      this.taskId = Number(id);\n      this.taskService.getTaskDetail(this.taskId)\n        .then(value => {\n          this.foundTask = value;\n          this.updatePageLoadingState();\n          this.projectService.getListOfProject(this.foundTask.project.id)\n            .then(value1 => {\n              this.lists = value1;\n              this.setDefaultValue();\n              this.updatePageLoadingState();\n            })\n            .catch(reason => {\n              this.showErrorModal(reason.Message);\n            })\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message, true);\n        });\n      this.taskService.getPriorities()\n        .then(value => {\n          this.priorities = value;\n          this.updatePageLoadingState();\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n        });\n    } else {\n      this.showErrorModal(`Invalid task id \"${id}\"`, true);\n    }\n    this.updateForm = new FormGroup({\n      name: new FormControl(undefined),\n      description: new FormControl(undefined),\n      list: new FormControl(undefined),\n      priority: new FormControl(undefined),\n      startDate: new FormControl(undefined),\n      duration: new FormControl(undefined),\n      effort: new FormControl(undefined)\n    })\n  }\n\n  updatePageLoadingState() {\n    if (\n      this.lists &&\n      this.foundTask &&\n      this.priorities\n    ) {\n      this.isLoading.page = false;\n    }\n  }\n\n  resetError() {\n    this.errors = {\n      name: '',\n      description: '',\n      list: '',\n      priority: '',\n      startDate: '',\n      duration: '',\n      effort: ''\n    };\n  }\n\n  setErrors(errors: any[]) {\n    for (let error of errors) {\n      const fieldName = error.key;\n      const errorMessage = error.message;\n      switch (fieldName) {\n        case 'Name':\n          this.errors.name = errorMessage;\n          break;\n        case 'Description':\n          this.errors.description = errorMessage;\n          break;\n        case 'ListID':\n          this.errors.effort = errorMessage;\n          break;\n        case 'Priority':\n          this.errors.priority = errorMessage;\n          break;\n        case 'StartDate':\n          this.errors.startDate = errorMessage;\n          break;\n        case 'Duration':\n          this.errors.duration = errorMessage;\n          break;\n        case 'Effort':\n          this.errors.effort = errorMessage;\n          break;\n      }\n    }\n  }\n\n  setDefaultValue() {\n    let startDate = moment(this.foundTask.startDate);\n    this.updateForm.patchValue({\n      name: this.foundTask.name,\n      description: this.foundTask.description,\n      list: this.foundTask.list.id,\n      priority: this.foundTask.priority,\n      startDate: {\n        date: {\n          year: startDate.year(),\n          month: startDate.month() + 1,\n          day: startDate.day()\n        }\n      },\n      duration: this.foundTask.duration,\n      effort: this.foundTask.effort,\n    });\n  }\n\n  handleUpdateTask() {\n    this.isLoading.update = true;\n    this.resetError();\n    const values = this.updateForm.value;\n    let startDate = moment(this.datepicker.selectionDayTxt, 'DD/MM/YYYY');\n    this.taskService.editTask(\n      this.foundTask.id,\n      values.name,\n      values.description,\n      values.list,\n      values.priority,\n      startDate.isValid() ? startDate.format('YYYY-MM-DD') : this.datepicker.selectionDayTxt,\n      values.duration,\n      values.effort\n    ).then(value => {\n      this.isLoading.update = false;\n    }).catch(reason => {\n      this.setErrors(reason.Data);\n      this.isLoading.update = false;\n    })\n  }\n\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\n    const initialState = {\n      closeCallback: () => {\n        if (isNavigateBack) {\n          this.location.back();\n        }\n      },\n      message: message\n    };\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.ts","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ViewComponent as ViewTask} from './view/view.component';\r\nimport {EditComponent as EditTask} from './edit/edit.component';\r\nimport {AddComponent as CreateTask} from './add/add.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Task'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          title: 'View'\r\n        },\r\n        path: 'view/:id',\r\n        component: ViewTask,\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Update'\r\n        },\r\n        path: 'edit/:id',\r\n        component: EditTask,\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Create'\r\n        },\r\n        path: 'create',\r\n        component: CreateTask,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class TaskRoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task-routing.module.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TaskRoutingModule} from './task-routing.module'\r\nimport {SpinnerModule} from '../../components/spinner/spinner.module';\r\nimport {ViewComponent} from './view/view.component';\r\nimport {CmaModule} from '../../cmaComponents/cma.module';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { AddComponent } from './add/add.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {LaddaModule} from 'angular2-ladda';\r\nimport {MyDatePickerModule} from 'mydatepicker';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TaskRoutingModule,\r\n    SpinnerModule,\r\n    CmaModule,\r\n    ReactiveFormsModule,\r\n    LaddaModule.forRoot({\r\n      style: 'expand-left'\r\n    }),\r\n    FormsModule,\r\n    MyDatePickerModule,\r\n  ],\r\n  declarations: [\r\n    ViewComponent,\r\n    EditComponent,\r\n    AddComponent\r\n  ]\r\n})\r\nexport class TaskModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task.module.ts","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Task detail\\r\\n  </div>\\r\\n  <app-spinner *ngIf=loading.page></app-spinner>\\r\\n  <div *ngIf=!loading.page class=\\\"card-body row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h2 class=\\\"card-title\\\">{{foundTask.name}}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <a routerLink=\\\"/task/edit/{{foundTask.id}}\\\" class=\\\"btn btn-secondary bg-light\\\">\\r\\n          <i class=\\\"fa fa-edit\\\"></i>&nbsp; Edit\\r\\n        </a>\\r\\n        <button class=\\\"btn btn-secondary bg-light\\\" (click)=\\\"handleOnCommentBtnClick()\\\">\\r\\n          <i class=\\\"fa fa-comment-o\\\"></i>&nbsp; Comment\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-secondary bg-light\\\">\\r\\n          <i class=\\\"fa fa-upload\\\"></i>&nbsp; Upload\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-secondary bg-light\\\">\\r\\n          <i class=\\\"fa fa-check\\\"></i>&nbsp; Done\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 mt-5\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 left-pane\\\">\\r\\n          <div class=\\\"section\\\">\\r\\n            <!--DETAIL SECTION-->\\r\\n            <h5 class=\\\"mb-3\\\">Detail</h5>\\r\\n            <dl class=\\\"row ml-1\\\">\\r\\n              <dt class=\\\"col-3\\\">Project:</dt>\\r\\n              <dd class=\\\"col-9\\\"><a\\r\\n                href=\\\"#/project/task?projectID={{foundTask.project.id}}\\\">{{foundTask.project.name}}</a></dd>\\r\\n              <dt class=\\\"col-3\\\">List:</dt>\\r\\n              <dd class=\\\"col-9\\\">{{foundTask.list.name}}</dd>\\r\\n              <dt class=\\\"col-3\\\">Priority:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                <span>{{foundTask.priorityText}}</span>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-3\\\">Status:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                <span>{{foundTask.statusText}}</span>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-3\\\">Effort:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                {{foundTask.effort}}\\r\\n                <span *ngIf=\\\"foundTask.effort <= 1\\\">Hour</span>\\r\\n                <span *ngIf=\\\"foundTask.effort > 1\\\">Hours</span>\\r\\n              </dd>\\r\\n            </dl>\\r\\n          </div>\\r\\n          <div class=\\\"section\\\">\\r\\n            <!--DESCRIPTION-->\\r\\n            <h5 class=\\\"mb-3\\\">Description</h5>\\r\\n            <dl class=\\\"row ml-1\\\">\\r\\n              <p class=\\\"col-12\\\">\\r\\n                {{foundTask.description}}\\r\\n              </p>\\r\\n            </dl>\\r\\n          </div>\\r\\n          <div class=\\\"section\\\">\\r\\n            <!--ATTACHMENT-->\\r\\n            <h5 class=\\\"mb-3\\\">Attachments</h5>\\r\\n            <dl class=\\\"row ml-1\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <ul class=\\\"list-group\\\" *ngFor=\\\"let attachment of foundTask.attachments\\\">\\r\\n                  <a href=\\\"{{attachment.source}}\\\">\\r\\n                    <li\\r\\n                      class=\\\"list-group-item d-flex list-group-item-action justify-content-between align-items-center\\\">\\r\\n                      <span>{{attachment.name}}</span>\\r\\n                      <i class=\\\"fa fa-download\\\"></i>\\r\\n                    </li>\\r\\n                  </a>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </dl>\\r\\n          </div>\\r\\n          <div class=\\\"section\\\">\\r\\n            <!--COMMENT-->\\r\\n            <h5 class=\\\"mb-3\\\">Comments</h5>\\r\\n            <dl class=\\\"row ml-1\\\">\\r\\n              <app-comment class=\\\"col-12\\\"\\r\\n                           *ngFor=\\\"let comment of foundTask.comments\\\"\\r\\n                           [comment]=\\\"comment\\\"></app-comment>\\r\\n            </dl>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5 right-pane ml-4\\\">\\r\\n          <div class=\\\"section\\\">\\r\\n            <!--MEMBER-->\\r\\n            <h5 class=\\\"mb-3\\\">Members</h5>\\r\\n            <dl class=\\\"row ml-1\\\">\\r\\n              <dt class=\\\"col-12\\\">Assignees:</dt>\\r\\n              <dd class=\\\"col-12 pl-4\\\">\\r\\n                <app-user-list *ngIf=\\\"foundTask.assignees\\\" [users]=\\\"foundTask.assignees\\\"></app-user-list>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-12\\\">Creator:</dt>\\r\\n              <dd class=\\\"col-12 pl-4\\\">\\r\\n                <app-user-list [user]=\\\"foundTask.createdBy\\\"></app-user-list>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-12\\\">Modifier:</dt>\\r\\n              <dd class=\\\"col-12 pl-4\\\">\\r\\n                <app-user-list *ngIf=\\\"foundTask.changedBy\\\" [user]=\\\"foundTask.changedBy\\\"></app-user-list>\\r\\n                <span *ngIf=\\\"!foundTask.changedBy\\\">N/A</span>\\r\\n              </dd>\\r\\n            </dl>\\r\\n          </div>\\r\\n          <div class=\\\"section\\\">\\r\\n            <!--DATE SECTION-->\\r\\n            <h5 class=\\\"mb-3\\\">Date</h5>\\r\\n            <dl class=\\\"row ml-1\\\">\\r\\n              <dt class=\\\"col-3\\\">Start date:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                <span *ngIf=\\\"foundTask.startDate\\\">\\r\\n                  {{foundTask.startDate | date:'dd/MM/yyyy'}}\\r\\n                </span>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-3\\\">Duration:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                {{foundTask.duration}}\\r\\n                <span *ngIf=\\\"foundTask.duration <= 1\\\">Day</span>\\r\\n                <span *ngIf=\\\"foundTask.duration > 1\\\">Days</span>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-3\\\">Deadline:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                {{foundTask.deadline | date:'dd/MM/yyyy'}}\\r\\n              </dd>\\r\\n              <dt class=\\\"col-3\\\">Finished:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n              <span *ngIf=\\\"!foundTask.finishedDate\\\">\\r\\n                N/A\\r\\n              </span>\\r\\n              </dd>\\r\\n              <dt class=\\\"col-3\\\">Created:</dt>\\r\\n              <dd class=\\\"col-9\\\">{{foundTask.createdDate | date:'dd/MM/yyyy'}}</dd>\\r\\n              <dt class=\\\"col-3\\\">Changed:</dt>\\r\\n              <dd class=\\\"col-9\\\">\\r\\n                <span *ngIf=\\\"foundTask.changedDate\\\">\\r\\n                  {{foundTask.changedDate | date:'dd/MM/yyyy'}}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"!foundTask.changedDate\\\">\\r\\n                  N/A\\r\\n                </span>\\r\\n              </dd>\\r\\n            </dl>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.html\n// module id = ../../../../../src/app/views/task/view/view.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".section dt {\\n  font-weight: 600; }\\n\\n.section .icons-list img.avatar {\\n  width: 35px;\\n  height: 35px; }\\n\\n.list-group-item:hover {\\n  cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.scss\n// module id = ../../../../../src/app/views/task/view/view.component.scss\n// module chunks = task.module","import {Component, OnInit} from '@angular/core';\r\nimport {Task} from '../../../interfaces/task'\r\nimport {TaskService} from '../../../services/task.service';\r\nimport {Location} from '@angular/common';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ErrorModalComponent} from '../../../cmaComponents/modals/error-modal/error-modal.component';\r\nimport {BsModalService} from 'ngx-bootstrap';\r\nimport {CreateListModalComponent} from '../../../cmaComponents/modals/create-list-modal/create-list-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-view',\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.scss']\r\n})\r\nexport class ViewComponent implements OnInit {\r\n  foundTask: Task;\r\n  loading: {\r\n    page: boolean\r\n  };\r\n\r\n  constructor(private taskService: TaskService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private location: Location,\r\n              private modalService: BsModalService) {\r\n    this.loading = {\r\n      page: true\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    if (Number(id)) {\r\n      this.taskService.getTaskDetail(Number(id))\r\n        .then(value => {\r\n          this.foundTask = value as Task;\r\n          this.loading.page = false;\r\n        })\r\n        .catch(reason => {\r\n          console.debug('ViewComponent-onInit', reason);\r\n          this.showErrorModal(reason.message);\r\n          this.loading.page = false;\r\n        })\r\n    } else {\r\n      this.showErrorModal(`${id} is not a valid ID`);\r\n    }\r\n  }\r\n\r\n  handleOnCommentBtnClick() {\r\n\r\n  }\r\n\r\n  private showErrorModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.ts"],"sourceRoot":"webpack:///"}