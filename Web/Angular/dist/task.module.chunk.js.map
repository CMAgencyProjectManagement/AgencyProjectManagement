{"version":3,"sources":["D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/my-tasks/my-tasks.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/my-tasks/my-tasks.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/my-tasks/my-tasks.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task-routing.module.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task.module.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.ts"],"names":[],"mappings":"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","file":"task.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <strong>Create task</strong>\\n      </div>\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body row\\\">\\n        <div [formGroup]=\\\"createForm\\\" class=\\\"form-horizontal col-lg-8 col-md-10 col-sm-12\\\">\\n          <div class=\\\"form-group row\\\">\\n            <!--NAME-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">\\n              Name <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <input type=\\\"text\\\" id=\\\"name-input\\\"\\n                     [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.name}\\\"\\n                     formControlName=\\\"name\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.name\\\">{{errors.name}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--Description-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"description-input\\\">\\n              Description\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <textarea id=\\\"description-input\\\"\\n                        rows=\\\"9\\\"\\n                        [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.description}\\\"\\n                        placeholder=\\\"Description..\\\"\\n                        formControlName=\\\"description\\\"></textarea>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.description\\\">{{errors.description}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--LIST-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"list-input\\\">\\n              List\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <select formControlName=\\\"list\\\" id=\\\"list-input\\\"\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\n                <option *ngFor=\\\"let list of foundProject.lists\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.list\\\">{{errors.list}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--priority-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"priority-input\\\">\\n              Priority <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-4\\\">\\n              <select formControlName=\\\"priority\\\" id=\\\"priority-input\\\"\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\n                <option *ngFor=\\\"let priority of priorities\\\" value=\\\"{{priority.key}}\\\">{{priority.value}}</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.priority\\\">{{errors.priority}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--Start date-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"startDate-input\\\">\\n              Start date <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-4 datepicker-group\\\">\\n              <my-date-picker id=\\\"startDate-input\\\" #datepicker\\n                              [options]=\\\"myDatePickerOptions\\\"\\n                              [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.startDate}\\\"\\n                              formControlName=\\\"startDate\\\" required>\\n              </my-date-picker>\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.startDate\\\">\\n                {{errors.startDate}}\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--DURATION-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"duration-input\\\">\\n              Duration <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" id=\\\"duration-input\\\"\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.duration}\\\"\\n                       formControlName=\\\"duration\\\">\\n                <span class=\\\"input-group-addon\\\">day(s)</span>\\n              </div>\\n\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.duration\\\">{{errors.duration}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--EFFORT-->\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"effort-input\\\">\\n              Effort <span style=\\\"color: red\\\"><strong>*</strong></span>\\n            </label>\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" id=\\\"effort-input\\\"\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.effort}\\\"\\n                       formControlName=\\\"effort\\\">\\n                <span class=\\\"input-group-addon\\\">hour(s)</span>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.effort\\\">{{errors.effort}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!--predecessors-->\\n            <label class=\\\"col-4 col-form-label text-right\\\">\\n              <i class=\\\"fa fa-exclamation-circle\\\"\\n                 popover=\\\"Tasks that have to finished before this task's start date\\\"\\n                 triggers=\\\"focus\\\" tabindex=\\\"999\\\"></i> Predecessor tasks\\n            </label>\\n            <div class=\\\"col-8\\\">\\n              <div>\\n                <app-tasklist [tasks]=\\\"predecessorTasks\\\"></app-tasklist>\\n              </div>\\n              <div class=\\\"mt-2\\\">\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"handleAddDependencyBtnClick()\\\">\\n                  Select predecessors\\n                </button>\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.predecessors\\\">{{errors.predecessors}}</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-actions text-center\\\">\\n            <!--BUTTONS-->\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleCreateTask()\\\" [ladda]=\\\"isLoading.create\\\">\\n                Create\\n              </button>\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"handleOnCancelBtnClick()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.html\n// module id = ../../../../../src/app/views/task/add/add.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".invalid-feedback {\\n  display: block; }\\n\\n.fa-exclamation-circle {\\n  cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.scss\n// module id = ../../../../../src/app/views/task/add/add.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProjectService} from '../../../services/project.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as moment from 'moment';\nimport {\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport {IMyDpOptions} from 'mydatepicker';\nimport {BsModalService} from 'ngx-bootstrap/modal';\nimport {\n  ErrorModalComponent,\n  SuccessModalComponent,\n  SelectTasksModalComponent\n} from '../../../cmaComponents/modals';\nimport {TaskService} from '../../../services/task.service';\nimport {Location} from '@angular/common';\nimport {Project} from '../../../interfaces/project';\nimport {Task} from '../../../interfaces/task';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  isLoading: {\n    page: boolean,\n    create: boolean\n  };\n  errors: {\n    name: string,\n    description: string,\n    list: string,\n    priority: string,\n    startDate: string,\n    duration: string,\n    effort: string,\n    predecessors: string;\n  };\n  @ViewChild('datepicker') datepicker;\n  foundProject: Project;\n  listId: number;\n  createForm: FormGroup;\n  priorities: any[];\n  public myDatePickerOptions: IMyDpOptions = {\n    // other options...\n    dateFormat: 'dd/mm/yyyy',\n    showInputField: true,\n    showTodayBtn: true\n  };\n  predecessorTasks: Task[];\n\n  constructor(private taskService: TaskService,\n              private projectService: ProjectService,\n              private modalService: BsModalService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location) {\n    this.isLoading = {\n      page: true,\n      create: false\n    };\n    this.predecessorTasks = [];\n    this.resetError();\n  }\n\n  ngOnInit() {\n    let projectId = this.route.snapshot.queryParamMap.get('project');\n    let listId = this.route.snapshot.queryParamMap.get('list');\n\n    if (Number(projectId) && Number(listId)) {\n      this.listId = Number(listId);\n      this.projectService.getProject(Number(projectId))\n        .then(project => {\n          this.foundProject = project;\n          this.updatePageLoadingState();\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n        });\n      this.taskService.getPriorities()\n        .then(value => {\n          this.priorities = value;\n          this.updatePageLoadingState();\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n        })\n    } else {\n      this.showErrorModal(`Invalid address`, true);\n    }\n    this.createForm = new FormGroup({\n      name: new FormControl(undefined),\n      description: new FormControl(undefined),\n      list: new FormControl(undefined),\n      priority: new FormControl(undefined),\n      startDate: new FormControl(undefined),\n      duration: new FormControl(undefined),\n      effort: new FormControl(undefined)\n    })\n  }\n\n  updatePageLoadingState() {\n    if (this.foundProject &&\n      this.priorities) {\n      this.setDefaultValue();\n      this.isLoading.page = false;\n    }\n  }\n\n  handleOnCancelBtnClick() {\n    this.setDefaultValue();\n    this.location.back();\n  }\n\n  resetError() {\n    this.errors = {\n      name: '',\n      description: '',\n      list: '',\n      priority: '',\n      startDate: '',\n      duration: '',\n      effort: '',\n      predecessors: ''\n    };\n  }\n\n  setErrors(errors: any[]) {\n    for (let error of errors) {\n      const fieldName = error.key;\n      const errorMessage = error.message;\n      switch (fieldName) {\n        case 'Name':\n          this.errors.name = errorMessage;\n          break;\n        case 'Description':\n          this.errors.description = errorMessage;\n          break;\n        case 'ListID':\n          this.errors.effort = errorMessage;\n          break;\n        case 'Priority':\n          this.errors.priority = errorMessage;\n          break;\n        case 'StartDate':\n          this.errors.startDate = errorMessage;\n          break;\n        case 'Duration':\n          this.errors.duration = errorMessage;\n          break;\n        case 'Effort':\n          this.errors.effort = errorMessage;\n          break;\n        case 'Predecessors':\n          this.errors.predecessors = errorMessage;\n          break;\n      }\n    }\n  }\n\n  setDefaultValue() {\n    let now = moment();\n    this.createForm.patchValue({\n      name: '',\n      description: '',\n      list: this.listId,\n      priority: '',\n      startDate: {\n        date: {\n          year: now.year(),\n          month: now.month() + 1,\n          day: now.date()\n        }\n      },\n      duration: '',\n      effort: '',\n    });\n  }\n\n  handleAddDependencyBtnClick() {\n    let taskPool = [];\n    for (let list of this.foundProject.lists) {\n      for (let task of list.tasks) {\n        taskPool.push(task);\n      }\n    }\n    const initialState = {\n      taskPool: taskPool,\n      title: 'Select predecessor tasks',\n      confirmCallback: (selectedTasks: Task[]) => {\n        this.predecessorTasks = selectedTasks;\n      }\n    };\n    this.modalService.show(SelectTasksModalComponent, {initialState, class: 'modal-dialog', ignoreBackdropClick: true});\n  }\n\n  handleCreateTask() {\n    this.isLoading.create = true;\n    this.resetError();\n    const values = this.createForm.value;\n    let startDate = moment(this.datepicker.selectionDayTxt, 'DD/MM/YYYY');\n    let preTaskIds = _.map(this.predecessorTasks, 'id');\n    this.taskService.createTask(\n      values.name,\n      values.description,\n      values.list,\n      values.priority,\n      startDate.isValid() ? startDate.format('YYYY-MM-DD') : this.datepicker.selectionDayTxt,\n      values.duration,\n      values.effort,\n      preTaskIds\n    ).then(value => {\n      const initialState = {\n        message: 'Your task successfully created'\n      };\n      this.modalService.show(SuccessModalComponent, {initialState, class: 'modal-dialog modal-success'});\n      this.isLoading.create = false;\n    }).catch(reason => {\n      this.setErrors(reason.Data);\n      this.isLoading.create = false;\n    })\n  }\n\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\n    const initialState = {\n      closeCallback: () => {\n        if (isNavigateBack) {\n          this.location.back();\n        }\n      },\n      message: message\n    };\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Update task</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\r\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body row\\\">\\r\\n        <div [formGroup]=\\\"updateForm\\\" class=\\\"form-horizontal col-lg-8 col-md-10 col-sm-12\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--NAME-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">\\r\\n              Name <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"name-input\\\"\\r\\n                     [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.name}\\\"\\r\\n                     formControlName=\\\"name\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.name\\\">{{errors.name}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--Description-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"description-input\\\">\\r\\n              Description\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <textarea id=\\\"description-input\\\"\\r\\n                        rows=\\\"9\\\"\\r\\n                        [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.description}\\\"\\r\\n                        placeholder=\\\"Description..\\\"\\r\\n                        formControlName=\\\"description\\\"></textarea>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.description\\\">{{errors.description}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--LIST-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"list-input\\\">\\r\\n              List\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"list\\\" id=\\\"list-input\\\"\\r\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\r\\n                <option *ngFor=\\\"let list of lists\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.list\\\">{{errors.list}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--priority-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"priority-input\\\">\\r\\n              Priority\\r\\n            </label>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <select formControlName=\\\"priority\\\" id=\\\"priority-input\\\"\\r\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\r\\n                <option *ngFor=\\\"let priority of priorities\\\" value=\\\"{{priority.key}}\\\">{{priority.value}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.priority\\\">{{errors.priority}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--Start date-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"startDate-input\\\">\\r\\n              Start date <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-4 datepicker-group\\\">\\r\\n              <my-date-picker id=\\\"startDate-input\\\" #datepicker\\r\\n                              [options]=\\\"myDatePickerOptions\\\"\\r\\n                              formControlName=\\\"startDate\\\"\\r\\n                              [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.startDate}\\\"\\r\\n                              required></my-date-picker>\\r\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.startDate\\\">\\r\\n                {{errors.startDate}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--DURATION-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"duration-input\\\">\\r\\n              Duration <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"duration-input\\\"\\r\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.duration}\\\"\\r\\n                       formControlName=\\\"duration\\\">\\r\\n                <span class=\\\"input-group-addon\\\">day(s)</span>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.duration\\\">{{errors.duration}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--EFFORT-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"effort-input\\\">\\r\\n              Effort <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"effort-input\\\"\\r\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.effort}\\\"\\r\\n                       formControlName=\\\"effort\\\">\\r\\n                <span class=\\\"input-group-addon\\\">hour(s)</span>\\r\\n              </div>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.effort\\\">{{errors.effort}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--predecessors-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\">\\r\\n              <i class=\\\"fa fa-exclamation-circle\\\"\\r\\n                 popover=\\\"Tasks that have to finished before this task's start date\\\"\\r\\n                 triggers=\\\"focus\\\" tabindex=\\\"999\\\"></i> Predecessor tasks\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <div>\\r\\n                <app-tasklist [tasks]=\\\"predecessorTasks\\\"></app-tasklist>\\r\\n              </div>\\r\\n              <div class=\\\"mt-2\\\">\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"handleAddDependencyBtnClick()\\\">\\r\\n                  Select predecessors\\r\\n                </button>\\r\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.predecessors\\\">{{errors.predecessors}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-actions text-center\\\">\\r\\n            <!--BUTTON-->\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleUpdateTask()\\\" [ladda]=\\\"isLoading.update\\\">\\r\\n                Save changes\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"onCancelBtnClick()\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.html\n// module id = ../../../../../src/app/views/task/edit/edit.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".invalid-feedback {\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.scss\n// module id = ../../../../../src/app/views/task/edit/edit.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Location} from '@angular/common';\r\nimport {TaskService} from '../../../services/task.service';\r\nimport {ErrorModalComponent, SelectTasksModalComponent, SuccessModalComponent} from '../../../cmaComponents/modals';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {Task} from '../../../interfaces/task';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {ProjectService} from '../../../services/project.service';\r\nimport {List} from '../../../interfaces/list';\r\nimport {IMyDpOptions} from 'mydatepicker';\r\nimport * as moment from 'moment';\r\nimport * as _ from 'lodash';\r\nimport {Project} from '../../../interfaces/project';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  isLoading: {\r\n    page: boolean,\r\n    update: boolean\r\n  };\r\n  errors: {\r\n    name: string,\r\n    description: string,\r\n    list: string,\r\n    priority: string,\r\n    startDate: string,\r\n    duration: string,\r\n    effort: string,\r\n    predecessors: string\r\n  };\r\n  @ViewChild('datepicker') datepicker;\r\n  taskId: number;\r\n  foundTask: Task;\r\n  updateForm: FormGroup;\r\n  lists: List[];\r\n  priorities: any[];\r\n  public myDatePickerOptions: IMyDpOptions = {\r\n    // other options...\r\n    dateFormat: 'dd/mm/yyyy',\r\n    showInputField: true,\r\n    showTodayBtn: true\r\n  };\r\n  foundProject: Project;\r\n  predecessorTasks: Task[];\r\n\r\n  constructor(private taskService: TaskService,\r\n              private projectService: ProjectService,\r\n              private modalService: BsModalService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private location: Location) {\r\n    this.isLoading = {\r\n      page: true,\r\n      update: false\r\n    };\r\n    this.predecessorTasks = [];\r\n    this.resetError();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    if (Number(id)) {\r\n      this.taskId = Number(id);\r\n      this.taskService.getTaskDetail(this.taskId)\r\n        .then(value => {\r\n          this.foundTask = value;\r\n          this.updatePageLoadingState();\r\n          this.projectService.getProject(this.foundTask.project.id)\r\n            .then(project => {\r\n              this.foundProject = project;\r\n              this.lists = this.foundProject.lists;\r\n              this.setDefaultValue();\r\n              this.updatePageLoadingState();\r\n            })\r\n            .catch(reason => {\r\n              this.showErrorModal(reason.Message);\r\n            });\r\n        })\r\n        .catch(reason => {\r\n          this.showErrorModal(reason.Message, true);\r\n        });\r\n      this.taskService.getPriorities()\r\n        .then(value => {\r\n          this.priorities = value;\r\n          this.updatePageLoadingState();\r\n        })\r\n        .catch(reason => {\r\n          this.showErrorModal(reason.Message);\r\n        });\r\n    } else {\r\n      this.showErrorModal(`Invalid task id \"${id}\"`, true);\r\n    }\r\n    this.updateForm = new FormGroup({\r\n      name: new FormControl(undefined),\r\n      description: new FormControl(undefined),\r\n      list: new FormControl(undefined),\r\n      priority: new FormControl(undefined),\r\n      startDate: new FormControl(undefined),\r\n      duration: new FormControl(undefined),\r\n      effort: new FormControl(undefined)\r\n    })\r\n  }\r\n\r\n  updatePageLoadingState() {\r\n    if (\r\n      this.lists &&\r\n      this.foundTask &&\r\n      this.priorities\r\n    ) {\r\n      this.predecessorTasks = this.foundTask.predecessors;\r\n      this.isLoading.page = false;\r\n    }\r\n  }\r\n\r\n  resetError() {\r\n    this.errors = {\r\n      name: '',\r\n      description: '',\r\n      list: '',\r\n      priority: '',\r\n      startDate: '',\r\n      duration: '',\r\n      effort: '',\r\n      predecessors: ''\r\n    };\r\n  }\r\n\r\n  setErrors(errors: any[]) {\r\n    for (let error of errors) {\r\n      const fieldName = error.key;\r\n      const errorMessage = error.message;\r\n      switch (fieldName) {\r\n        case 'Name':\r\n          this.errors.name = errorMessage;\r\n          break;\r\n        case 'Description':\r\n          this.errors.description = errorMessage;\r\n          break;\r\n        case 'ListID':\r\n          this.errors.effort = errorMessage;\r\n          break;\r\n        case 'Priority':\r\n          this.errors.priority = errorMessage;\r\n          break;\r\n        case 'StartDate':\r\n          this.errors.startDate = errorMessage;\r\n          break;\r\n        case 'Duration':\r\n          this.errors.duration = errorMessage;\r\n          break;\r\n        case 'Effort':\r\n          this.errors.effort = errorMessage;\r\n          break;\r\n        case 'Predecessors':\r\n          this.errors.predecessors = errorMessage;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancelBtnClick() {\r\n    this.location.back();\r\n  }\r\n\r\n  setDefaultValue() {\r\n    let startDate = moment(this.foundTask.startDate);\r\n    this.updateForm.patchValue({\r\n      name: this.foundTask.name,\r\n      description: this.foundTask.description,\r\n      list: this.foundTask.list.id,\r\n      priority: this.foundTask.priority,\r\n      startDate: {\r\n        date: {\r\n          year: startDate.year(),\r\n          month: startDate.month() + 1,\r\n          day: startDate.date()\r\n        }\r\n      },\r\n      duration: this.foundTask.duration,\r\n      effort: this.foundTask.effort,\r\n    });\r\n  }\r\n\r\n  handleAddDependencyBtnClick() {\r\n    let taskPool = [];\r\n    for (let list of this.foundProject.lists) {\r\n      for (let task of list.tasks) {\r\n        if (task.id != this.foundTask.id) {\r\n          taskPool.push(task);\r\n        }\r\n      }\r\n    }\r\n    const initialState = {\r\n      taskPool: taskPool,\r\n      title: 'Select predecessor tasks',\r\n      confirmCallback: (selectedTasks: Task[]) => {\r\n        this.predecessorTasks = selectedTasks;\r\n      }\r\n    };\r\n    this.modalService.show(SelectTasksModalComponent, {initialState, class: 'modal-dialog', ignoreBackdropClick: true});\r\n  }\r\n\r\n  handleUpdateTask() {\r\n    this.isLoading.update = true;\r\n    this.resetError();\r\n    const values = this.updateForm.value;\r\n    let startDate = moment(this.datepicker.selectionDayTxt, 'DD/MM/YYYY');\r\n    let preTaskIds = _.map(this.predecessorTasks, 'id');\r\n    this.taskService.editTask(\r\n      this.foundTask.id,\r\n      values.name,\r\n      values.description,\r\n      values.list,\r\n      values.priority,\r\n      startDate.isValid() ? startDate.format('YYYY-MM-DD') : this.datepicker.selectionDayTxt,\r\n      values.duration,\r\n      values.effort,\r\n      preTaskIds\r\n    ).then(value => {\r\n      this.foundTask = value as Task;\r\n      this.showSuccessModal('Update task successfully');\r\n      this.isLoading.update = false;\r\n    }).catch(reason => {\r\n      this.setErrors(reason.Data);\r\n      this.isLoading.update = false;\r\n    })\r\n  }\r\n\r\n  showSuccessModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(SuccessModalComponent, {initialState, class: 'modal-dialog modal-success'});\r\n  }\r\n\r\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.ts","module.exports = \"<!--<app-task-table [tasks]=\\\"tasks\\\"></app-task-table>-->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>My tasks</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\r\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body\\\">\\r\\n        <div class=\\\"button-section\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <span class=\\\"input-group-btn\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"search(searchField.value)\\\">\\r\\n              <i class=\\\"fa fa-search\\\"></i> Search\\r\\n            </button>\\r\\n          </span>\\r\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" (input)=\\\"search(searchField.value)\\\" #searchField>\\r\\n        </div>\\r\\n        <div class=\\\"dataTable-container hide-search mt-3\\\">\\r\\n          <table id=\\\"allProjectsTable\\\" datatable [dtOptions]=\\\"datatableOptions\\\" class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Status</th>\\r\\n                <th>Priority</th>\\r\\n                <th>Start date</th>\\r\\n                <th>Deadline</th>\\r\\n                <th>Project</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let task of tasks\\\">\\r\\n                <td>\\r\\n                  <a routerLink=\\\"/task/{{task.id}}/view\\\">{{task.name}}</a>\\r\\n                </td>\\r\\n                <td>{{task.statusText}}</td>\\r\\n                <td>{{task.priorityText}}</td>\\r\\n                <td>{{task.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n                <td>{{task.deadline | date:'dd/MM/yyyy'}}</td>\\r\\n                <td>\\r\\n                  <a routerLink=\\\"/project/{{task.project.id}}/detail\\\"> {{task.project.name}} </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/my-tasks/my-tasks.component.html\n// module id = ../../../../../src/app/views/task/my-tasks/my-tasks.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/my-tasks/my-tasks.component.scss\n// module id = ../../../../../src/app/views/task/my-tasks/my-tasks.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {StoreService} from '../../../services/tree.service';\r\nimport {User} from '../../../interfaces/user';\r\nimport {Task} from '../../../interfaces/task';\r\nimport {TaskService} from '../../../services/task.service';\r\nimport {Location} from '@angular/common';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ErrorModalComponent} from '../../../cmaComponents/modals';\r\nimport {DataTableDirective} from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-my-tasks',\r\n  templateUrl: './my-tasks.component.html',\r\n  styleUrls: ['./my-tasks.component.scss']\r\n})\r\nexport class MyTasksComponent implements OnInit {\r\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n  currentUser: User;\r\n  tasks: Task[];\r\n  isLoading: {\r\n    page: boolean\r\n  };\r\n  datatableOptions: DataTables.Settings = {\r\n    lengthChange: false,\r\n    columnDefs: [\r\n      {\r\n        searchable: false,\r\n        orderable: false,\r\n        targets: [5]\r\n      }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private storeService: StoreService,\r\n    private taskService: TaskService,\r\n    private modalService: BsModalService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private location: Location\r\n  ) {\r\n    this.currentUser = storeService.get(['currentUser']);\r\n    this.tasks = [];\r\n    this.isLoading = {\r\n      page: true\r\n    };\r\n  }\r\n\r\n  search(searchStr: string) {\r\n    this.datatableElement.dtInstance.then(\r\n      (dtInstance: DataTables.Api) => dtInstance.search(searchStr).draw()\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.taskService.getMyTask()\r\n      .then(value => {\r\n        this.tasks = value;\r\n        this.isLoading.page = false;\r\n      })\r\n      .catch(reason => {\r\n        this.showErrorModal(reason.Message);\r\n        this.isLoading.page = false;\r\n      })\r\n  }\r\n\r\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/my-tasks/my-tasks.component.ts","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ViewComponent as ViewTask} from './view/view.component';\nimport {EditComponent as EditTask} from './edit/edit.component';\nimport {AddComponent as CreateTask} from './add/add.component';\nimport {MyTasksComponent} from './my-tasks/my-tasks.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Task'\n    },\n    children: [\n      {\n        data: {\n          title: 'Task detail'\n        },\n        path: ':id/view',\n        component: ViewTask,\n      },\n      {\n        data: {\n          title: 'Task'\n        },\n        path: ':id/detail',\n        component: ViewTask,\n      },\n      {\n        data: {\n          title: 'Tasks detail'\n        },\n        path: 'view',\n        component: ViewTask,\n      },\n      {\n        data: {\n          title: 'Update task'\n        },\n        path: 'edit/:id',\n        component: EditTask,\n      },\n      {\n        data: {\n          title: 'Create task'\n        },\n        path: 'create',\n        component: CreateTask,\n      },\n      {\n        data: {\n          title: 'My tasks'\n        },\n        path: 'mytasks',\n        component: MyTasksComponent,\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class TaskRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task-routing.module.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TaskRoutingModule} from './task-routing.module'\nimport {SpinnerModule} from '../../components/spinner/spinner.module';\nimport {ViewComponent} from './view/view.component';\nimport {CmaModule} from '../../cmaComponents/cma.module';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {LaddaModule} from 'angular2-ladda';\nimport {MyDatePickerModule} from 'mydatepicker';\nimport { MyTasksComponent } from './my-tasks/my-tasks.component';\nimport {DataTablesModule} from 'angular-datatables';\nimport {PopoverModule} from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TaskRoutingModule,\n    SpinnerModule,\n    CmaModule,\n    ReactiveFormsModule,\n    LaddaModule.forRoot({\n      style: 'expand-left'\n    }),\n    PopoverModule.forRoot(),\n    FormsModule,\n    MyDatePickerModule,\n    DataTablesModule,\n  ],\n  declarations: [\n    ViewComponent,\n    EditComponent,\n    AddComponent,\n    MyTasksComponent\n  ]\n})\nexport class TaskModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/task.module.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Task detail</strong>\\n\\n  </div>\\n  <app-spinner *ngIf=isLoading.page></app-spinner>\\n  <div *ngIf=!isLoading.page class=\\\"card-body row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h2 class=\\\"card-title\\\">{{foundTask.name}}</h2>\\n    </div>\\n    <!--<div class=\\\"col-12\\\" *ngIf=\\\"isReadonlyMode && !managementMode\\\">-->\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"button-row\\\">\\n        <a routerLink=\\\"/task/edit/{{foundTask.id}}\\\"\\n           *ngIf=\\\"managementMode\\\"\\n           class=\\\"btn btn-secondary bg-light\\\">\\n          <i class=\\\"fa fa-edit\\\"></i>&nbsp; Edit\\n        </a>\\n        <button class=\\\"btn btn-secondary bg-light\\\" (click)=\\\"handleOnCommentBtnClick()\\\">\\n          <i class=\\\"fa fa-comment-o\\\"></i>&nbsp; Comment\\n        </button>\\n        <button [ngClass]=\\\"{'btn': true, 'btn-secondary': true, 'bg-light':!isLoading.openAssignModal}\\\"\\n                *ngIf=\\\"managementMode\\\"\\n                (click)=\\\"handleOnAssignBtnClick()\\\"\\n                [disabled]=\\\"isLoading.openAssignModal\\\"\\n                [ladda]=\\\"isLoading.openAssignModal\\\">\\n          <i class=\\\"fa fa-user-plus\\\"></i>&nbsp; Assign\\n        </button>\\n        <button [ngClass]=\\\"{'btn': true, 'btn-secondary': true, 'bg-light':!isLoading.openUnAssignModal}\\\"\\n                *ngIf=\\\"managementMode\\\"\\n                (click)=\\\"handleOnUnAssignBtnClick()\\\"\\n                [disabled]=\\\"isLoading.openUnAssignModal\\\"\\n                [ladda]=\\\"isLoading.openUnAssignModal\\\">\\n          <i class=\\\"fa fa-user-times\\\"></i>&nbsp; Un-Assign\\n        </button>\\n        <button [ngClass]=\\\"{'btn': true, 'btn-secondary': true, 'bg-light':!isLoading.done}\\\"\\n                *ngIf=\\\"!managementMode\\\"\\n                [disabled]=\\\"foundTask.status == 1 || isLoading.done\\\"\\n                (click)=\\\"handleOnNeedReviewBtnClick()\\\"\\n                [ladda]=\\\"isLoading.done\\\">\\n          <i class=\\\"fa fa-check\\\"></i>&nbsp; Need review\\n        </button>\\n        <button [ngClass]=\\\"{'btn': true, 'btn-secondary': true, 'bg-light':!isLoading.setStatus}\\\"\\n                *ngIf=\\\"managementMode\\\"\\n                [disabled]=\\\"isLoading.setStatus\\\"\\n                (click)=\\\"handleSetStatusBtnClick()\\\"\\n                [ladda]=\\\"isLoading.setStatus\\\">\\n          Set status\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 mt-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6 left-pane\\\">\\n          <div class=\\\"section\\\">\\n            <!--DETAIL SECTION-->\\n            <h5 class=\\\"mb-3\\\">Detail</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-3\\\">Project:</dt>\\n              <dd class=\\\"col-9\\\"><a\\n                routerLink=\\\"/project/{{foundTask.project.id}}/detail\\\">{{foundTask.project.name}}</a></dd>\\n              <dt class=\\\"col-3\\\">List:</dt>\\n              <dd class=\\\"col-9\\\">{{foundTask.list.name}}</dd>\\n              <dt class=\\\"col-3\\\">Priority:</dt>\\n              <dd class=\\\"col-9\\\">\\n                <span>{{foundTask.priorityText}}</span>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Status:</dt>\\n              <dd class=\\\"col-9\\\">\\n                <!--<span>{{foundTask.statusText}}</span>-->\\n                <app-task-status [taskStatusNumber]=\\\"foundTask.status\\\"></app-task-status>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Effort:</dt>\\n              <dd class=\\\"col-9\\\">\\n                {{foundTask.effort}}\\n                <span *ngIf=\\\"foundTask.effort <= 1\\\">Hour</span>\\n                <span *ngIf=\\\"foundTask.effort > 1\\\">Hours</span>\\n              </dd>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--DESCRIPTION-->\\n            <h5 class=\\\"mb-3\\\">Description</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <p class=\\\"col-12\\\">\\n                {{foundTask.description}}\\n              </p>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--CHECK LIST-->\\n            <h5 class=\\\"mb-3\\\">Check list</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <p class=\\\"col-12\\\">\\n\\n              </p>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--ATTACHMENT-->\\n            <h5 class=\\\"mb-3\\\">Attachments</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group row\\\" [formGroup]=\\\"attachmentForm\\\">\\n                  <div class=\\\"col-9\\\">\\n                    <input #attachmentInput\\n                           id=\\\"file-input\\\" name=\\\"file-input\\\" type=\\\"file\\\"\\n                           formGroupName=\\\"attachment\\\"\\n                           (change)=\\\"attachmentFileChange($event)\\\">\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <button class=\\\"btn btn-success float-right\\\"\\n                            [disabled]=\\\"!attachmentForm.value.attachment || isLoading.attachmentUpload || needReviewMode\\\"\\n                            [hidden]=\\\"!attachmentForm.value.attachment\\\"\\n                            [ladda]=\\\"isLoading.attachmentUpload\\\"\\n                            (click)=\\\"handleUploadAttachmentClick()\\\">\\n                      <i class=\\\"fa fa-plus\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12\\\">\\n                <ul class=\\\"list-group\\\">\\n                  <li class=\\\"list-group-item\\\" *ngFor=\\\"let attachment of this.foundTask.attachments\\\">\\n                    <div class=\\\"d-flex align-items-center\\\">\\n                      <a href=\\\"{{attachment.source}}\\\">\\n                        <span>{{attachment.name}}</span>\\n                      </a>\\n                      <button class=\\\"btn btn-danger btn-sm ml-auto\\\"\\n                              [disabled]=\\\"isLoading.attachmentRemove[attachment.ID] || needReviewMode\\\"\\n                              (click)=\\\"handleDeleteAttachmentClick(attachment.ID)\\\"\\n                              [ladda]=\\\"isLoading.attachmentRemove[attachment.ID]\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                      </button>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--COMMENT-->\\n            <h5 class=\\\"mb-3\\\">Comments</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"col-12\\\">\\n                    <!--COMMENT BTN + LABEL-->\\n                    <button class=\\\"btn btn-secondary bg-light\\\"\\n                            *ngIf=\\\"!openCommentForm\\\"\\n                            (click)=\\\"handleOnCommentBtnClick()\\\">\\n                      <i class=\\\"fa fa-comment-o\\\"></i>&nbsp; Comment\\n                    </button>\\n                  </div>\\n                  <div class=\\\"col-12\\\" *ngIf=\\\"openCommentForm\\\">\\n                    <!--COMMENT TEXT AREA-->\\n                    <textarea title=\\\"comment-input\\\" rows=\\\"9\\\" class=\\\"form-control\\\"\\n                              [(ngModel)]=\\\"commentBoxModel\\\"\\n                              placeholder=\\\"Content...\\\"></textarea>\\n                  </div>\\n                  <div class=\\\"col-12 mt-3 d-flex justify-content-end\\\" *ngIf=\\\"openCommentForm\\\">\\n                    <!--ADD COMMENT, CANCEL BTN-->\\n                    <button class=\\\"btn btn-success mr-2\\\" [ladda]=\\\"isLoading.comment\\\"\\n                            (click)=\\\"handleAddCommentBtnClick()\\\">Add\\n                    </button>\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"handleCancelCommentBtnClick()\\\">Cancel</button>\\n                  </div>\\n                </div>\\n              </div>\\n              <app-comment class=\\\"col-12\\\"\\n                           *ngFor=\\\"let comment of foundTask.comments\\\"\\n                           [comment]=\\\"comment\\\"\\n                           (onEdit)=\\\"handleEditComment($event)\\\"></app-comment>\\n            </dl>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5 right-pane ml-4\\\">\\n          <div class=\\\"section\\\">\\n            <!--MEMBER-->\\n            <!--<h5 class=\\\"mb-3\\\">Members</h5>-->\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-12\\\">Assignees:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <app-user-list *ngIf=\\\"foundTask.assignees\\\" [users]=\\\"foundTask.assignees\\\"></app-user-list>\\n                <span *ngIf=\\\"!foundTask.assignees || foundTask.assignees.length < 1\\\">N/A</span>\\n              </dd>\\n              <dt class=\\\"col-12\\\">Creator:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <app-user-list [user]=\\\"foundTask.createdBy\\\"></app-user-list>\\n                <span *ngIf=\\\"!foundTask.createdBy\\\">N/A</span>\\n              </dd>\\n              <dt class=\\\"col-12\\\">Modifier:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <app-user-list *ngIf=\\\"foundTask.changedBy\\\" [user]=\\\"foundTask.changedBy\\\"></app-user-list>\\n                <span *ngIf=\\\"!foundTask.changedBy\\\">N/A</span>\\n              </dd>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--TASK DEPENDENCY-->\\n            <!--<h5 class=\\\"mb-3\\\">Members</h5>-->\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-12\\\">Predecessor tasks:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <span *ngIf=\\\"foundTask.predecessors.length <= 0\\\">N/A</span>\\n                <app-tasklist *ngIf=\\\"foundTask.predecessors.length > 0\\\"\\n                              [tasks]=\\\"foundTask.predecessors\\\">\\n\\n                </app-tasklist>\\n              </dd>\\n              <dt class=\\\"col-12\\\">Successor tasks:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <span *ngIf=\\\"foundTask.successors.length <= 0\\\">N/A</span>\\n                <app-tasklist *ngIf=\\\"foundTask.successors.length > 0\\\"\\n                              [tasks]=\\\"foundTask.successors\\\">\\n\\n                </app-tasklist>\\n              </dd>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--DATE SECTION-->\\n            <!--<h5 class=\\\"mb-3\\\">Date</h5>-->\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-4\\\">Start date:</dt>\\n              <dd class=\\\"col-8\\\">\\n                <span *ngIf=\\\"foundTask.startDate\\\">\\n                  {{foundTask.startDate | date:'dd/MM/yyyy'}}\\n                </span>\\n              </dd>\\n              <dt class=\\\"col-4\\\">Duration:</dt>\\n              <dd class=\\\"col-8\\\">\\n                {{foundTask.duration}}\\n                <span *ngIf=\\\"foundTask.duration <= 1\\\">Day</span>\\n                <span *ngIf=\\\"foundTask.duration > 1\\\">Days</span>\\n              </dd>\\n              <dt class=\\\"col-4\\\">Deadline date:</dt>\\n              <dd class=\\\"col-8\\\">\\n                {{foundTask.deadline | date:'dd/MM/yyyy'}}\\n              </dd>\\n              <dt class=\\\"col-4\\\">Finished date:</dt>\\n              <dd class=\\\"col-8\\\">\\n              <span *ngIf=\\\"!foundTask.finishedDate\\\">\\n                N/A\\n              </span>\\n                <span *ngIf=\\\"foundTask.finishedDate\\\">\\n                {{foundTask.finishedDate | date:'dd/MM/yyyy'}}\\n              </span>\\n              </dd>\\n              <dt class=\\\"col-4\\\">Created date:</dt>\\n              <dd class=\\\"col-8\\\">{{foundTask.createdDate | date:'dd/MM/yyyy'}}</dd>\\n              <dt class=\\\"col-4\\\">Changed date:</dt>\\n              <dd class=\\\"col-8\\\">\\n                <span *ngIf=\\\"foundTask.changedDate\\\">\\n                  {{foundTask.changedDate | date:'dd/MM/yyyy'}}\\n                </span>\\n                <span *ngIf=\\\"!foundTask.changedDate\\\">\\n                  N/A\\n                </span>\\n              </dd>\\n            </dl>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.html\n// module id = ../../../../../src/app/views/task/view/view.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".section dt {\\n  font-weight: 600; }\\n\\n.section .icons-list img.avatar {\\n  width: 35px;\\n  height: 35px; }\\n\\n.separator-v {\\n  border: 0;\\n  width: 1px;\\n  height: 100%;\\n  background-image: -webkit-gradient(linear, left top, right top, from(transparent), color-stop(rgba(0, 0, 0, 0.75)), to(transparent));\\n  background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75), transparent); }\\n\\n.hidden-field {\\n  position: absolute;\\n  top: -5000px;\\n  left: -5000px; }\\n\\n.list-group-item:hover {\\n  cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.scss\n// module id = ../../../../../src/app/views/task/view/view.component.scss\n// module chunks = task.module","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Task} from '../../../interfaces/task'\nimport {TaskService} from '../../../services/task.service';\nimport {Location} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BsModalService} from 'ngx-bootstrap';\nimport {CommentModalComponent, ConfirmModalComponent, ErrorModalComponent, SelectUsersModalComponent} from '../../../cmaComponents/modals';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {UploadService} from '../../../services/upload.service';\nimport {Attachment} from '../../../interfaces/attachment';\nimport * as _ from 'lodash';\nimport {UserService} from '../../../services/user.service';\nimport {User} from '../../../interfaces/user';\nimport {CommentService} from '../../../services/comment.service';\nimport {Comment} from '../../../interfaces/comment';\nimport {StoreService} from '../../../services/tree.service';\nimport {SelectStatusModalComponent} from '../../../cmaComponents/modals';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n  @ViewChild('attachmentInput') attachmentInput: ElementRef;\n  foundTask: Task;\n  managementMode: boolean;\n  staffMode: boolean;\n  isLoading: {\n    page: boolean\n    attachmentUpload: boolean\n    attachmentRemove: boolean[]\n    openAssignModal: boolean\n    openUnAssignModal: boolean\n    done: boolean,\n    setStatus: boolean,\n    comment: boolean,\n    editComment: boolean\n  };\n  statuses: any[];\n  priorities: any[];\n  attachmentForm: FormGroup;\n  commentBoxModel: string;\n  errors: {\n    attachment: string\n  };\n  openCommentForm: boolean;\n  needReviewMode: boolean;\n  pageMode: {\n    manager: boolean,\n    staff: boolean,\n    done: boolean,\n    needReview: boolean\n  };\n\n  constructor(private taskService: TaskService,\n              private uploadService: UploadService,\n              private userService: UserService,\n              private commentService: CommentService,\n              private storeService: StoreService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location,\n              private modalService: BsModalService) {\n    let currentUser = this.storeService.get(['currentUser']) as User;\n    this.managementMode = currentUser.isManager || currentUser.isAdmin;\n    this.isLoading = {\n      page: true,\n      attachmentUpload: false,\n      attachmentRemove: [],\n      openAssignModal: false,\n      openUnAssignModal: false,\n      done: false,\n      comment: false,\n      editComment: false,\n      setStatus: false\n    };\n    this.needReviewMode = false;\n    this.openCommentForm = false;\n    this.resetErrors();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let taskId = params['id'];\n      if (Number(taskId)) {\n        this.isLoading.page = true;\n        this.loadData(taskId);\n      } else {\n        this.showErrorModal(`${taskId} is not a valid ID`, true);\n      }\n    });\n    this.attachmentForm = new FormGroup({\n      attachment: new FormControl(undefined),\n    });\n  }\n\n  loadData(taskId) {\n    this.taskService.getTaskDetail(taskId)\n      .then(value => {\n        this.foundTask = value as Task;\n        this.isLoading.page = false;\n        this.updateLockingMode();\n      })\n      .catch(reason => {\n        console.debug('ViewComponent-onInit', reason);\n        this.showErrorModal(reason.Message, true);\n      })\n  }\n\n  updateLockingMode() {\n    this.needReviewMode =\n      this.foundTask.statusText == 'Need review' ||\n      this.foundTask.statusText == 'Done';\n  }\n\n  handleOnCommentBtnClick() {\n    this.openCommentForm = true;\n  }\n\n  handleAddCommentBtnClick() {\n    this.isLoading.comment = true;\n    let content = this.commentBoxModel;\n    this.commentService.createComment(content, this.foundTask.id)\n      .then(value => {\n          let comment = value as Comment;\n          this.foundTask.comments.push(comment);\n          this.isLoading.comment = false;\n        }\n      )\n      .catch(reason => {\n        this.showErrorModal(reason.Message);\n        console.debug('handleAddCommentBtnClick', reason);\n        this.isLoading.comment = false;\n      })\n  }\n\n  handleCancelCommentBtnClick() {\n    this.openCommentForm = false;\n    this.commentBoxModel = '';\n  }\n\n  handleOnAssignBtnClick() {\n    const onConfirm = (selectedUsers: User[]) => {\n      let selectedIds = _.map(selectedUsers, 'id');\n      this.taskService.assignTask(this.foundTask.id, selectedIds)\n        .then(value => {\n          this.foundTask.assignees = _.concat(this.foundTask.assignees, selectedUsers);\n          this.isLoading.openAssignModal = false\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n          this.isLoading.openAssignModal = false\n        })\n    };\n    this.isLoading.openAssignModal = true;\n    this.userService.getUserOfProject(this.foundTask.project.id)\n      .then((value: User[]) => {\n        const currentAssigneesIds = _.map(this.foundTask.assignees, 'id');\n        const pool = _.filter(value, (user: User) => !currentAssigneesIds.includes(user.id) && !user.isManager);\n        const selected = _.filter(value, (user: User) => currentAssigneesIds.includes(user.id));\n\n        const initialState = {\n          confirmCallback: onConfirm,\n          cancelCallback: () => {\n            this.isLoading.openAssignModal = false;\n          },\n          closeCallback: () => {\n            this.isLoading.openAssignModal = false;\n          },\n          userPool: pool,\n          selectedUser: selected,\n          title: `Assign`,\n          confirmButtonText: 'Assign'\n        };\n        this.modalService.show(SelectUsersModalComponent,\n          {initialState, class: 'modal-dialog', ignoreBackdropClick: true});\n      })\n      .catch(reason => {\n        this.showErrorModal('An error has occurred while trying to open assign pop-up ');\n        this.isLoading.openAssignModal = false\n      });\n  }\n\n  handleOnUnAssignBtnClick() {\n    this.isLoading.openUnAssignModal = true;\n    const onConfirm = (selectedUsers: User[]) => {\n      let selectedIds = _.map(selectedUsers, 'id');\n      this.taskService.unassignTask(this.foundTask.id, selectedIds)\n        .then(value => {\n          this.foundTask.assignees = _.filter(this.foundTask.assignees, (user: User) => {\n            return !selectedIds.includes(user.id)\n          });\n          this.isLoading.openUnAssignModal = false;\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n          this.isLoading.openUnAssignModal = false;\n        })\n    };\n    const initialState = {\n      confirmCallback: onConfirm,\n      cancelCallback: () => {\n        this.isLoading.openUnAssignModal = false;\n      },\n      closeCallback: () => {\n        this.isLoading.openUnAssignModal = false;\n      },\n      userPool: this.foundTask.assignees,\n      title: `Un-assign`,\n      confirmButtonText: 'Un-assign'\n    };\n    this.modalService.show(SelectUsersModalComponent, {initialState, class: 'modal-dialog', ignoreBackdropClick: true});\n  }\n\n  handleOnNeedReviewBtnClick() {\n    const onConfirm = () => {\n      this.isLoading.done = true;\n      this.taskService.finishTask(this.foundTask.id)\n        .then(value => {\n          this.foundTask = value;\n          this.isLoading.done = false;\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Message);\n          this.isLoading.done = false;\n        })\n    };\n\n    const initialState = {\n      message: `Are you sure you want to finish this task!`,\n      confirmCallback: onConfirm\n    };\n    this.modalService.show(ConfirmModalComponent, {initialState, class: 'modal-dialog', ignoreBackdropClick: true});\n  }\n\n  handleUploadAttachmentClick() {\n    const formValue = this.attachmentForm.value;\n    if (formValue.attachment) {\n      this.resetErrors();\n      this.isLoading.attachmentUpload = true;\n      this.uploadService.uploadAttachment(formValue.attachment, this.foundTask.id)\n        .then(value => {\n          let attachment = value as Attachment;\n          this.foundTask.attachments.push(attachment);\n          this.isLoading.attachmentUpload = false;\n        })\n        .catch(reason => {\n          this.errors.attachment = reason.Data;\n          this.isLoading.attachmentUpload = false;\n        })\n    } else {\n      this.resetErrors();\n    }\n  }\n\n  handleDeleteAttachmentClick(attachmentId) {\n    const onConfirm = () => {\n      this.isLoading.attachmentRemove[attachmentId] = true;\n      this.uploadService.deleteAttachment(attachmentId)\n        .then(value => {\n          let removedItemId = value.id as number;\n          this.foundTask.attachments = _.filter(this.foundTask.attachments, item => {\n            return item.ID !== removedItemId;\n          });\n          this.isLoading.attachmentRemove[attachmentId] = false;\n        })\n        .catch(reason => {\n          this.isLoading.attachmentRemove[attachmentId] = false;\n          this.showErrorModal(reason.Message);\n        })\n    };\n    const initialState = {\n      message: `Are you sure you want to delete attachment ?`,\n      confirmCallback: onConfirm\n    };\n    this.modalService.show(ConfirmModalComponent, {initialState, class: 'modal-dialog'});\n  }\n\n  handleEditComment(comment) {\n    const confirmCallback = (newComment: Comment) => {\n      this.commentService.updateComment(newComment.ID, newComment.body)\n        .then((returnedComment: Comment) => {\n          for (let i = 0; i < this.foundTask.comments.length; i++) {\n            if (this.foundTask.comments[i].ID == returnedComment.ID) {\n              this.foundTask.comments[i] = returnedComment;\n              break;\n            }\n          }\n        })\n        .catch(reason => {\n          this.showErrorModal(reason.Data);\n        })\n    };\n    const initialState = {\n      comment: comment,\n      confirmCallback: confirmCallback,\n    };\n    this.modalService.show(CommentModalComponent, {initialState, class: 'modal-dialog'});\n  }\n\n  handleSetStatusBtnClick() {\n    this.isLoading.setStatus = true;\n    const initialState = {\n      task: this.foundTask,\n      confirmCallback: (task) => {\n        this.foundTask = task;\n        this.updateLockingMode();\n        this.isLoading.setStatus = false;\n      },\n      cancelCallback: () => {\n        this.isLoading.setStatus = false;\n      },\n      closeCallback: () => {\n        this.isLoading.setStatus = false;\n      }\n    };\n    this.modalService.show(SelectStatusModalComponent, {initialState, class: 'modal-dialog', ignoreBackdropClick: true});\n  }\n\n  attachmentFileChange(fileInput: any) {\n    let file = fileInput.target.files[0];\n    this.attachmentForm.controls['attachment'].setValue(file);\n  }\n\n  resetErrors() {\n    this.errors = {\n      attachment: ''\n    }\n  }\n\n  private showErrorModal(message: string, isNavigateBack: boolean = false) {\n    const initialState = {\n      closeCallback: () => {\n        if (isNavigateBack) {\n          this.location.back();\n        }\n      },\n      message: message\n    };\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.ts"],"sourceRoot":"webpack:///"}