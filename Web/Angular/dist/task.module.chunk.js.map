{"version":3,"sources":["C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.html","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.scss","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.ts","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.html","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.scss","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.ts","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/task-routing.module.ts","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/task.module.ts","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.html","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.scss","C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.ts"],"names":[],"mappings":"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","file":"task.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Create task</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\r\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body row\\\">\\r\\n        <div [formGroup]=\\\"createForm\\\" class=\\\"form-horizontal col-lg-8 col-md-10 col-sm-12\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--NAME-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">\\r\\n              Name <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"name-input\\\"\\r\\n                     [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.name}\\\"\\r\\n                     formControlName=\\\"name\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.name\\\">{{errors.name}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--Description-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"description-input\\\">\\r\\n              Description\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <textarea id=\\\"description-input\\\"\\r\\n                        rows=\\\"9\\\"\\r\\n                        [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.description}\\\"\\r\\n                        placeholder=\\\"Description..\\\"\\r\\n                        formControlName=\\\"description\\\"></textarea>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.description\\\">{{errors.description}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--LIST-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"list-input\\\">\\r\\n              List <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"list\\\" id=\\\"list-input\\\"\\r\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\r\\n                <option *ngFor=\\\"let list of foundProject.lists\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.list\\\">{{errors.list}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--priority-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"priority-input\\\">\\r\\n              Priority <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"priority\\\" id=\\\"priority-input\\\"\\r\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\r\\n                <option *ngFor=\\\"let priority of priorities\\\" value=\\\"{{priority.key}}\\\">{{priority.value}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.priority\\\">{{errors.priority}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--Start date-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"startDate-input\\\">\\r\\n              Start date <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8 datepicker-group\\\">\\r\\n              <my-date-picker id=\\\"startDate-input\\\" #datepicker\\r\\n                              [options]=\\\"myDatePickerOptions\\\"\\r\\n                              formControlName=\\\"startDate\\\"\\r\\n                              [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.startDate}\\\"\\r\\n                              required></my-date-picker>\\r\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.startDate\\\">\\r\\n                {{errors.startDate}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--DURATION-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"duration-input\\\">\\r\\n              Duration <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"duration-input\\\"\\r\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.duration}\\\"\\r\\n                       formControlName=\\\"duration\\\">\\r\\n                <span class=\\\"input-group-addon\\\">day</span>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.duration\\\">{{errors.duration}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--EFFORT-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"effort-input\\\">\\r\\n              Effort <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"effort-input\\\"\\r\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.effort}\\\"\\r\\n                       formControlName=\\\"effort\\\">\\r\\n                <span class=\\\"input-group-addon\\\">hour</span>\\r\\n              </div>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.effort\\\">{{errors.effort}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-actions text-center\\\">\\r\\n            <!--BUTTON-->\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleCreateTask()\\\" [ladda]=\\\"isLoading.create\\\">\\r\\n                Create\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"setDefaultValue()\\\">Reset</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.html\n// module id = ../../../../../src/app/views/task/add/add.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".invalid-feedback {\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.scss\n// module id = ../../../../../src/app/views/task/add/add.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ProjectService} from '../../../services/project.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n} from '@angular/forms';\r\nimport {IMyDpOptions} from 'mydatepicker';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ErrorModalComponent} from '../../../cmaComponents/modals';\r\nimport {TaskService} from '../../../services/task.service';\r\nimport {Location} from '@angular/common';\r\nimport {Project} from '../../../interfaces/project';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.scss']\r\n})\r\nexport class AddComponent implements OnInit {\r\n  isLoading: {\r\n    page: boolean,\r\n    create: boolean\r\n  };\r\n  errors: {\r\n    name: string,\r\n    description: string,\r\n    list: string,\r\n    priority: string,\r\n    startDate: string,\r\n    duration: string,\r\n    effort: string\r\n  };\r\n  @ViewChild('datepicker') datepicker;\r\n  foundProject: Project;\r\n  listId: number;\r\n  createForm: FormGroup;\r\n  priorities: any[];\r\n  public myDatePickerOptions: IMyDpOptions = {\r\n    // other options...\r\n    dateFormat: 'dd/mm/yyyy',\r\n    showInputField: true,\r\n    showTodayBtn: true\r\n  };\r\n\r\n  constructor(private taskService: TaskService,\r\n              private projectService: ProjectService,\r\n              private modalService: BsModalService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private location: Location) {\r\n    this.isLoading = {\r\n      page: true,\r\n      create: false\r\n    };\r\n    this.resetError();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let projectId = this.route.snapshot.queryParamMap.get('projectID');\r\n    let listId = this.route.snapshot.queryParamMap.get('listID');\r\n\r\n    if (Number(projectId) && Number(listId)) {\r\n      this.listId = Number(listId);\r\n      this.projectService.getProject(Number(projectId))\r\n        .then(project => {\r\n          this.foundProject = project;\r\n          this.updatePageLoadingState();\r\n        })\r\n        .catch(reason => {\r\n          this.showErrorModal(reason.Message);\r\n        });\r\n      this.taskService.getPriorities()\r\n        .then(value => {\r\n          this.priorities = value;\r\n          this.updatePageLoadingState();\r\n        })\r\n        .catch(reason => {\r\n          this.showErrorModal(reason.Message);\r\n        })\r\n    } else {\r\n      this.showErrorModal(`Invalid address`, true);\r\n    }\r\n    this.createForm = new FormGroup({\r\n      name: new FormControl(undefined),\r\n      description: new FormControl(undefined),\r\n      list: new FormControl(undefined),\r\n      priority: new FormControl(undefined),\r\n      startDate: new FormControl(undefined),\r\n      duration: new FormControl(undefined),\r\n      effort: new FormControl(undefined)\r\n    })\r\n  }\r\n\r\n  updatePageLoadingState() {\r\n    if (this.foundProject &&\r\n      this.priorities) {\r\n      this.setDefaultValue();\r\n      this.isLoading.page = false;\r\n    }\r\n  }\r\n\r\n  resetError() {\r\n    this.errors = {\r\n      name: '',\r\n      description: '',\r\n      list: '',\r\n      priority: '',\r\n      startDate: '',\r\n      duration: '',\r\n      effort: ''\r\n    };\r\n  }\r\n\r\n  setErrors(errors: any[]) {\r\n    for (let error of errors) {\r\n      const fieldName = error.key;\r\n      const errorMessage = error.message;\r\n      switch (fieldName) {\r\n        case 'Name':\r\n          this.errors.name = errorMessage;\r\n          break;\r\n        case 'Description':\r\n          this.errors.description = errorMessage;\r\n          break;\r\n        case 'ListID':\r\n          this.errors.effort = errorMessage;\r\n          break;\r\n        case 'Priority':\r\n          this.errors.priority = errorMessage;\r\n          break;\r\n        case 'StartDate':\r\n          this.errors.startDate = errorMessage;\r\n          break;\r\n        case 'Duration':\r\n          this.errors.duration = errorMessage;\r\n          break;\r\n        case 'Effort':\r\n          this.errors.effort = errorMessage;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setDefaultValue() {\r\n    let now = moment();\r\n    this.createForm.patchValue({\r\n      name: '',\r\n      description: '',\r\n      list: this.listId,\r\n      priority: '',\r\n      startDate: {\r\n        date: {\r\n          year: now.year(),\r\n          month: now.month() + 1,\r\n          day: now.day()\r\n        }\r\n      },\r\n      duration: '',\r\n      effort: '',\r\n    });\r\n  }\r\n\r\n  handleCreateTask() {\r\n    this.isLoading.create = true;\r\n    this.resetError();\r\n    const values = this.createForm.value;\r\n    let startDate = moment(this.datepicker.selectionDayTxt, 'DD/MM/YYYY');\r\n    this.taskService.createTask(\r\n      values.name,\r\n      values.description,\r\n      values.list,\r\n      values.priority,\r\n      startDate.isValid() ? startDate.format('YYYY-MM-DD') : this.datepicker.selectionDayTxt,\r\n      values.duration,\r\n      values.effort\r\n    ).then(value => {\r\n      this.isLoading.create = false;\r\n    }).catch(reason => {\r\n      this.setErrors(reason.Data);\r\n      this.isLoading.create = false;\r\n    })\r\n  }\r\n\r\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/add/add.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Update task</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isLoading.page\\\"></app-spinner>\\r\\n      <div *ngIf=\\\"!isLoading.page\\\" class=\\\"card-body row\\\">\\r\\n        <div [formGroup]=\\\"updateForm\\\" class=\\\"form-horizontal col-lg-8 col-md-10 col-sm-12\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--NAME-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">\\r\\n              Name <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"name-input\\\"\\r\\n                     [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.name}\\\"\\r\\n                     formControlName=\\\"name\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.name\\\">{{errors.name}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--Description-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"description-input\\\">\\r\\n              Description\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <textarea id=\\\"description-input\\\"\\r\\n                        rows=\\\"9\\\"\\r\\n                        [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.description}\\\"\\r\\n                        placeholder=\\\"Description..\\\"\\r\\n                        formControlName=\\\"description\\\"></textarea>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.description\\\">{{errors.description}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--LIST-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"list-input\\\">\\r\\n              List <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"list\\\" id=\\\"list-input\\\"\\r\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\r\\n                <option *ngFor=\\\"let list of lists\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.list\\\">{{errors.list}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--priority-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"priority-input\\\">\\r\\n              Priority <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"priority\\\" id=\\\"priority-input\\\"\\r\\n                      [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.list}\\\">\\r\\n                <option *ngFor=\\\"let priority of priorities\\\" value=\\\"{{priority.key}}\\\">{{priority.value}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.priority\\\">{{errors.priority}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--Start date-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"startDate-input\\\">\\r\\n              Start date <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8 datepicker-group\\\">\\r\\n              <my-date-picker id=\\\"startDate-input\\\" #datepicker\\r\\n                              [options]=\\\"myDatePickerOptions\\\"\\r\\n                              formControlName=\\\"startDate\\\"\\r\\n                              [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.startDate}\\\"\\r\\n                              required></my-date-picker>\\r\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.startDate\\\">\\r\\n                {{errors.startDate}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--DURATION-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"duration-input\\\">\\r\\n              Duration <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"duration-input\\\"\\r\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.duration}\\\"\\r\\n                       formControlName=\\\"duration\\\">\\r\\n                <span class=\\\"input-group-addon\\\">day</span>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.duration\\\">{{errors.duration}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <!--EFFORT-->\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"effort-input\\\">\\r\\n              Effort <span style=\\\"color: red\\\"><strong>*</strong></span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"effort-input\\\"\\r\\n                       [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.effort}\\\"\\r\\n                       formControlName=\\\"effort\\\">\\r\\n                <span class=\\\"input-group-addon\\\">hour</span>\\r\\n              </div>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.effort\\\">{{errors.effort}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-actions text-center\\\">\\r\\n            <!--BUTTON-->\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleUpdateTask()\\\" [ladda]=\\\"isLoading.update\\\">\\r\\n                Save changes\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"setDefaultValue()\\\">Reset</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.html\n// module id = ../../../../../src/app/views/task/edit/edit.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".invalid-feedback {\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.scss\n// module id = ../../../../../src/app/views/task/edit/edit.component.scss\n// module chunks = task.module","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Location} from '@angular/common';\r\nimport {TaskService} from '../../../services/task.service';\r\nimport {ErrorModalComponent} from '../../../cmaComponents/modals';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {Task} from '../../../interfaces/task';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {ProjectService} from '../../../services/project.service';\r\nimport {List} from '../../../interfaces/list';\r\nimport {IMyDpOptions} from 'mydatepicker';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  isLoading: {\r\n    page: boolean,\r\n    update: boolean\r\n  };\r\n  errors: {\r\n    name: string,\r\n    description: string,\r\n    list: string,\r\n    priority: string,\r\n    startDate: string,\r\n    duration: string,\r\n    effort: string\r\n  };\r\n  @ViewChild('datepicker') datepicker;\r\n  taskId: number;\r\n  foundTask: Task;\r\n  updateForm: FormGroup;\r\n  lists: List[];\r\n  priorities: any[];\r\n  public myDatePickerOptions: IMyDpOptions = {\r\n    // other options...\r\n    dateFormat: 'dd/mm/yyyy',\r\n    showInputField: true,\r\n    showTodayBtn: true\r\n  };\r\n\r\n  constructor(private taskService: TaskService,\r\n              private projectService: ProjectService,\r\n              private modalService: BsModalService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private location: Location) {\r\n    this.isLoading = {\r\n      page: true,\r\n      update: false\r\n    };\r\n    this.resetError();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    if (Number(id)) {\r\n      this.taskId = Number(id);\r\n      this.taskService.getTaskDetail(this.taskId)\r\n        .then(value => {\r\n          this.foundTask = value;\r\n          this.updatePageLoadingState();\r\n          this.projectService.getListOfProject(this.foundTask.project.id)\r\n            .then(value1 => {\r\n              this.lists = value1;\r\n              this.setDefaultValue();\r\n              this.updatePageLoadingState();\r\n            })\r\n            .catch(reason => {\r\n              this.showErrorModal(reason.Message);\r\n            })\r\n        })\r\n        .catch(reason => {\r\n          this.showErrorModal(reason.Message, true);\r\n        });\r\n      this.taskService.getPriorities()\r\n        .then(value => {\r\n          this.priorities = value;\r\n          this.updatePageLoadingState();\r\n        })\r\n        .catch(reason => {\r\n          this.showErrorModal(reason.Message);\r\n        });\r\n    } else {\r\n      this.showErrorModal(`Invalid task id \"${id}\"`, true);\r\n    }\r\n    this.updateForm = new FormGroup({\r\n      name: new FormControl(undefined),\r\n      description: new FormControl(undefined),\r\n      list: new FormControl(undefined),\r\n      priority: new FormControl(undefined),\r\n      startDate: new FormControl(undefined),\r\n      duration: new FormControl(undefined),\r\n      effort: new FormControl(undefined)\r\n    })\r\n  }\r\n\r\n  updatePageLoadingState() {\r\n    if (\r\n      this.lists &&\r\n      this.foundTask &&\r\n      this.priorities\r\n    ) {\r\n      this.isLoading.page = false;\r\n    }\r\n  }\r\n\r\n  resetError() {\r\n    this.errors = {\r\n      name: '',\r\n      description: '',\r\n      list: '',\r\n      priority: '',\r\n      startDate: '',\r\n      duration: '',\r\n      effort: ''\r\n    };\r\n  }\r\n\r\n  setErrors(errors: any[]) {\r\n    for (let error of errors) {\r\n      const fieldName = error.key;\r\n      const errorMessage = error.message;\r\n      switch (fieldName) {\r\n        case 'Name':\r\n          this.errors.name = errorMessage;\r\n          break;\r\n        case 'Description':\r\n          this.errors.description = errorMessage;\r\n          break;\r\n        case 'ListID':\r\n          this.errors.effort = errorMessage;\r\n          break;\r\n        case 'Priority':\r\n          this.errors.priority = errorMessage;\r\n          break;\r\n        case 'StartDate':\r\n          this.errors.startDate = errorMessage;\r\n          break;\r\n        case 'Duration':\r\n          this.errors.duration = errorMessage;\r\n          break;\r\n        case 'Effort':\r\n          this.errors.effort = errorMessage;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setDefaultValue() {\r\n    let startDate = moment(this.foundTask.startDate);\r\n    this.updateForm.patchValue({\r\n      name: this.foundTask.name,\r\n      description: this.foundTask.description,\r\n      list: this.foundTask.list.id,\r\n      priority: this.foundTask.priority,\r\n      startDate: {\r\n        date: {\r\n          year: startDate.year(),\r\n          month: startDate.month() + 1,\r\n          day: startDate.day()\r\n        }\r\n      },\r\n      duration: this.foundTask.duration,\r\n      effort: this.foundTask.effort,\r\n    });\r\n  }\r\n\r\n  handleUpdateTask() {\r\n    this.isLoading.update = true;\r\n    this.resetError();\r\n    const values = this.updateForm.value;\r\n    let startDate = moment(this.datepicker.selectionDayTxt, 'DD/MM/YYYY');\r\n    this.taskService.editTask(\r\n      this.foundTask.id,\r\n      values.name,\r\n      values.description,\r\n      values.list,\r\n      values.priority,\r\n      startDate.isValid() ? startDate.format('YYYY-MM-DD') : this.datepicker.selectionDayTxt,\r\n      values.duration,\r\n      values.effort\r\n    ).then(value => {\r\n      this.isLoading.update = false;\r\n    }).catch(reason => {\r\n      this.setErrors(reason.Data);\r\n      this.isLoading.update = false;\r\n    })\r\n  }\r\n\r\n  showErrorModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/edit/edit.component.ts","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ViewComponent as ViewTask} from './view/view.component';\r\nimport {EditComponent as EditTask} from './edit/edit.component';\r\nimport {AddComponent as CreateTask} from './add/add.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Task'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          title: 'View'\r\n        },\r\n        path: 'view/:id',\r\n        component: ViewTask,\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Update'\r\n        },\r\n        path: 'edit/:id',\r\n        component: EditTask,\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Create'\r\n        },\r\n        path: 'create',\r\n        component: CreateTask,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class TaskRoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/task-routing.module.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TaskRoutingModule} from './task-routing.module'\nimport {SpinnerModule} from '../../components/spinner/spinner.module';\nimport {ViewComponent} from './view/view.component';\nimport {CmaModule} from '../../cmaComponents/cma.module';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {LaddaModule} from 'angular2-ladda';\nimport {MyDatePickerModule} from 'mydatepicker';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TaskRoutingModule,\n    SpinnerModule,\n    CmaModule,\n    ReactiveFormsModule,\n    LaddaModule.forRoot({\n      style: 'expand-left'\n    }),\n    FormsModule,\n    MyDatePickerModule,\n  ],\n  declarations: [\n    ViewComponent,\n    EditComponent,\n    AddComponent\n  ]\n})\nexport class TaskModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/task.module.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Task detail\\n  </div>\\n  <app-spinner *ngIf=isLoading.page></app-spinner>\\n  <div *ngIf=!isLoading.page class=\\\"card-body row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h2 class=\\\"card-title\\\">{{foundTask.name}}</h2>\\n    </div>\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"button-row\\\">\\n        <a routerLink=\\\"/task/edit/{{foundTask.id}}\\\" class=\\\"btn btn-secondary bg-light\\\">\\n          <i class=\\\"fa fa-edit\\\"></i>&nbsp; Edit\\n        </a>\\n        <button class=\\\"btn btn-secondary bg-light\\\" (click)=\\\"handleOnCommentBtnClick()\\\">\\n          <i class=\\\"fa fa-comment-o\\\"></i>&nbsp; Comment\\n        </button>\\n        <button class=\\\"btn btn-secondary bg-light\\\"\\n                (click)=\\\"handleOnAssignBtnClick()\\\"\\n                [ladda]=\\\"isLoading.openAssignModal\\\">\\n          <i class=\\\"fa fa-user-plus\\\"></i>&nbsp; Assign\\n        </button>\\n        <button class=\\\"btn btn-secondary bg-light\\\"\\n                (click)=\\\"handleOnUnAssignBtnClick()\\\"\\n                [ladda]=\\\"isLoading.openUnAssignModal\\\">\\n          <i class=\\\"fa fa-user-times\\\"></i>&nbsp; Un-Assign\\n        </button>\\n        <button class=\\\"btn btn-secondary bg-light\\\"\\n                [disabled]=\\\"foundTask.statusText == 'Done'\\\"\\n                (click)=\\\"handleOnDoneBtnClick()\\\"\\n                [ladda]=\\\"isLoading.done\\\">\\n          <i class=\\\"fa fa-check\\\"></i>&nbsp; Done\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 mt-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6 left-pane\\\">\\n          <div class=\\\"section\\\">\\n            <!--DETAIL SECTION-->\\n            <h5 class=\\\"mb-3\\\">Detail</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-3\\\">Project:</dt>\\n              <dd class=\\\"col-9\\\"><a\\n                href=\\\"#/project/task?projectID={{foundTask.project.id}}\\\">{{foundTask.project.name}}</a></dd>\\n              <dt class=\\\"col-3\\\">List:</dt>\\n              <dd class=\\\"col-9\\\">{{foundTask.list.name}}</dd>\\n              <dt class=\\\"col-3\\\">Priority:</dt>\\n              <dd class=\\\"col-9\\\">\\n                <span>{{foundTask.priorityText}}</span>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Status:</dt>\\n              <dd class=\\\"col-9\\\">\\n                <span>{{foundTask.statusText}}</span>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Effort:</dt>\\n              <dd class=\\\"col-9\\\">\\n                {{foundTask.effort}}\\n                <span *ngIf=\\\"foundTask.effort <= 1\\\">Hour</span>\\n                <span *ngIf=\\\"foundTask.effort > 1\\\">Hours</span>\\n              </dd>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--DESCRIPTION-->\\n            <h5 class=\\\"mb-3\\\">Description</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <p class=\\\"col-12\\\">\\n                {{foundTask.description}}\\n              </p>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--ATTACHMENT-->\\n            <h5 class=\\\"mb-3\\\">Attachments</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group row\\\" [formGroup]=\\\"attachmentForm\\\">\\n                  <div class=\\\"col-9\\\">\\n                    <input #attachmentInput\\n                           id=\\\"file-input\\\" name=\\\"file-input\\\" type=\\\"file\\\"\\n                           formGroupName=\\\"attachment\\\"\\n                           (change)=\\\"attachmentFileChange($event)\\\">\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <button class=\\\"btn btn-success float-right\\\"\\n                            [disabled]=\\\"!attachmentForm.value.attachment\\\"\\n                            [ladda]=\\\"isLoading.attachmentUpload\\\"\\n                            (click)=\\\"handleUploadAttachmentClick()\\\">\\n                      <i class=\\\"fa fa-plus\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12\\\">\\n                <ul class=\\\"list-group\\\">\\n                  <li class=\\\"list-group-item\\\" *ngFor=\\\"let attachment of attachments\\\">\\n                    <div class=\\\"d-flex align-items-center\\\">\\n                      <a href=\\\"{{attachment.source}}\\\">\\n                        <span>{{attachment.name}}</span>\\n                      </a>\\n                      <button class=\\\"btn btn-danger btn-sm ml-auto\\\"\\n                              (click)=\\\"handleDeleteAttachmentClick(attachment.ID)\\\"\\n                              [ladda]=\\\"isLoading.attachmentRemove[attachment.ID]\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                      </button>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--COMMENT-->\\n            <h5 class=\\\"mb-3\\\">Comments</h5>\\n            <dl class=\\\"row ml-1\\\">\\n              <app-comment class=\\\"col-12\\\"\\n                           *ngFor=\\\"let comment of foundTask.comments\\\"\\n                           [comment]=\\\"comment\\\"></app-comment>\\n            </dl>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5 right-pane ml-4\\\">\\n          <div class=\\\"section\\\">\\n            <!--MEMBER-->\\n            <!--<h5 class=\\\"mb-3\\\">Members</h5>-->\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-12\\\">Assignees:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <app-user-list *ngIf=\\\"foundTask.assignees\\\" [users]=\\\"foundTask.assignees\\\"></app-user-list>\\n                <span *ngIf=\\\"!foundTask.assignees || foundTask.assignees.length < 1\\\">N/A</span>\\n              </dd>\\n              <dt class=\\\"col-12\\\">Creator:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <app-user-list [user]=\\\"foundTask.createdBy\\\"></app-user-list>\\n                <span *ngIf=\\\"!foundTask.createdBy\\\">N/A</span>\\n              </dd>\\n              <dt class=\\\"col-12\\\">Modifier:</dt>\\n              <dd class=\\\"col-12 pl-4\\\">\\n                <app-user-list *ngIf=\\\"foundTask.changedBy\\\" [user]=\\\"foundTask.changedBy\\\"></app-user-list>\\n                <span *ngIf=\\\"!foundTask.changedBy\\\">N/A</span>\\n              </dd>\\n            </dl>\\n          </div>\\n          <div class=\\\"section\\\">\\n            <!--DATE SECTION-->\\n            <!--<h5 class=\\\"mb-3\\\">Date</h5>-->\\n            <dl class=\\\"row ml-1\\\">\\n              <dt class=\\\"col-3\\\">Start date:</dt>\\n              <dd class=\\\"col-9\\\">\\n                <span *ngIf=\\\"foundTask.startDate\\\">\\n                  {{foundTask.startDate | date:'dd/MM/yyyy'}}\\n                </span>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Duration:</dt>\\n              <dd class=\\\"col-9\\\">\\n                {{foundTask.duration}}\\n                <span *ngIf=\\\"foundTask.duration <= 1\\\">Day</span>\\n                <span *ngIf=\\\"foundTask.duration > 1\\\">Days</span>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Deadline:</dt>\\n              <dd class=\\\"col-9\\\">\\n                {{foundTask.deadline | date:'dd/MM/yyyy'}}\\n              </dd>\\n              <dt class=\\\"col-3\\\">Finished:</dt>\\n              <dd class=\\\"col-9\\\">\\n              <span *ngIf=\\\"!foundTask.finishedDate\\\">\\n                N/A\\n              </span>\\n              </dd>\\n              <dt class=\\\"col-3\\\">Created:</dt>\\n              <dd class=\\\"col-9\\\">{{foundTask.createdDate | date:'dd/MM/yyyy'}}</dd>\\n              <dt class=\\\"col-3\\\">Changed:</dt>\\n              <dd class=\\\"col-9\\\">\\n                <span *ngIf=\\\"foundTask.changedDate\\\">\\n                  {{foundTask.changedDate | date:'dd/MM/yyyy'}}\\n                </span>\\n                <span *ngIf=\\\"!foundTask.changedDate\\\">\\n                  N/A\\n                </span>\\n              </dd>\\n            </dl>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.html\n// module id = ../../../../../src/app/views/task/view/view.component.html\n// module chunks = task.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".section dt {\\n  font-weight: 600; }\\n\\n.section .icons-list img.avatar {\\n  width: 35px;\\n  height: 35px; }\\n\\n.separator-v {\\n  border: 0;\\n  width: 1px;\\n  height: 100%;\\n  background-image: -webkit-gradient(linear, left top, right top, from(transparent), color-stop(rgba(0, 0, 0, 0.75)), to(transparent));\\n  background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75), transparent); }\\n\\n.hidden-field {\\n  position: absolute;\\n  top: -5000px;\\n  left: -5000px; }\\n\\n.list-group-item:hover {\\n  cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.scss\n// module id = ../../../../../src/app/views/task/view/view.component.scss\n// module chunks = task.module","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Task} from '../../../interfaces/task'\nimport {TaskService} from '../../../services/task.service';\nimport {Location} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BsModalService} from 'ngx-bootstrap';\nimport {ErrorModalComponent, SelectUsersModalComponent} from '../../../cmaComponents/modals';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {UploadService} from '../../../services/upload.service';\nimport {Attachment} from '../../../interfaces/attachment';\nimport * as _ from 'lodash' ;\nimport {UserService} from '../../../services/user.service';\nimport {User} from '../../../interfaces/user';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n  @ViewChild('attachmentInput') attachmentInput: ElementRef;\n  foundTask: Task;\n  attachments: Attachment[];\n  isLoading: {\n    page: boolean\n    attachmentUpload: boolean\n    attachmentRemove: boolean[]\n    openAssignModal: boolean\n    openUnAssignModal: boolean\n    done: boolean\n  };\n  statuses: any[];\n  priorities: any[];\n  attachmentForm: FormGroup;\n  errors: {\n    attachment: string\n  };\n\n  constructor(private taskService: TaskService,\n              private uploadService: UploadService,\n              private userServcice: UserService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location,\n              private modalService: BsModalService) {\n    this.isLoading = {\n      page: true,\n      attachmentUpload: false,\n      attachmentRemove: [],\n      openAssignModal: false,\n      openUnAssignModal: false,\n      done: false\n    };\n    this.resetErrors();\n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.paramMap.get('id');\n    if (Number(id)) {\n      this.taskService.getTaskDetail(Number(id))\n        .then(value => {\n          this.foundTask = value as Task;\n          this.attachments = this.foundTask.attachments;\n          this.isLoading.page = false;\n        })\n        .catch(reason => {\n          console.debug('ViewComponent-onInit', reason);\n          this.showErrorModal(reason.message);\n          this.isLoading.page = false;\n        })\n    } else {\n      this.showErrorModal(`${id} is not a valid ID`);\n    }\n\n    this.attachmentForm = new FormGroup({\n      attachment: new FormControl(undefined),\n    })\n  }\n\n  handleOnCommentBtnClick() {\n\n  }\n\n  handleOnAssignBtnClick() {\n    const onConfirm = (selectedUsers: User[]) => {\n      let selectedIds = _.map(selectedUsers, 'id');\n      this.taskService.assignTask(this.foundTask.id, selectedIds)\n        .then(value => {\n          this.foundTask.assignees = _.concat(this.foundTask.assignees, selectedUsers);\n          this.isLoading.openAssignModal = false\n        })\n        .catch(reason => {\n          this.showErrorModal('Assign fail');\n          this.isLoading.openAssignModal = false\n        })\n    };\n    this.isLoading.openAssignModal = true;\n    this.userServcice.getUserOfProject(this.foundTask.project.id)\n      .then(value => {\n        const pool = [];\n        for (let user of value as User[]) {\n          let removeFlag = false;\n          for (let assignee of this.foundTask.assignees) {\n            if (assignee.id == user.id) {\n              removeFlag = true;\n            }\n          }\n          if (!removeFlag) {\n            pool.push(user);\n          }\n        }\n\n        const initialState = {\n          confirmCallback: onConfirm,\n          cancelCallback: () => {\n            this.isLoading.openAssignModal = false;\n          },\n          closeCallback: () => {\n            this.isLoading.openAssignModal = false;\n          },\n          userPool: pool,\n          title: `Assign`,\n        };\n        this.modalService.show(SelectUsersModalComponent, {initialState, class: 'modal-dialog'});\n      })\n      .catch(reason => {\n        this.showErrorModal('An error has occurred while trying to open assign pop-up ');\n        this.isLoading.openAssignModal = false\n      });\n  }\n\n  handleOnUnAssignBtnClick() {\n    this.isLoading.openUnAssignModal = true;\n    const onConfirm = (selectedUsers: User[]) => {\n      let selectedIds = _.map(selectedUsers, 'id');\n      this.taskService.unassignTask(this.foundTask.id, selectedIds)\n        .then(value => {\n          this.foundTask.assignees = _.filter(this.foundTask.assignees, (user: User) => {\n            return !selectedIds.includes(user.id)\n          });\n          this.isLoading.openUnAssignModal = false;\n        })\n        .catch(reason => {\n          this.showErrorModal('Un-Assign fail');\n          this.isLoading.openUnAssignModal = false;\n        })\n    };\n    const initialState = {\n      confirmCallback: onConfirm,\n      cancelCallback: () => {\n        this.isLoading.openUnAssignModal = false;\n      },\n      closeCallback: () => {\n        this.isLoading.openUnAssignModal = false;\n      },\n      userPool: this.foundTask.assignees,\n      title: `Un-assign`,\n    };\n    this.modalService.show(SelectUsersModalComponent, {initialState, class: 'modal-dialog'});\n  }\n\n  handleOnDoneBtnClick() {\n    this.isLoading.done = true;\n    this.taskService.finishTask(this.foundTask.id)\n      .then(value => {\n        this.foundTask = value;\n        this.isLoading.done = false;\n      })\n      .catch(reason => {\n        this.showErrorModal('Finish task fail');\n        this.isLoading.done = false;\n      })\n  }\n\n  handleUploadAttachmentClick() {\n    const formValue = this.attachmentForm.value;\n    if (formValue.attachment) {\n      this.resetErrors();\n      this.isLoading.attachmentUpload = true;\n      this.uploadService.uploadAttachment(formValue.attachment, this.foundTask.id)\n        .then(value => {\n          let attachment = value as Attachment;\n          this.attachments.push(attachment);\n          this.isLoading.attachmentUpload = false;\n        })\n        .catch(reason => {\n          this.errors.attachment = reason.Data;\n          this.isLoading.attachmentUpload = false;\n        })\n    } else {\n      this.resetErrors();\n      // show some form of success message here\n    }\n  }\n\n  handleDeleteAttachmentClick(attachmentId) {\n    this.isLoading.attachmentRemove[attachmentId] = true;\n    this.uploadService.deleteAttachment(attachmentId)\n      .then(value => {\n        let removedItemId = value.id as number;\n        this.attachments = _.filter(this.attachments, item => {\n          return item.ID !== removedItemId;\n        });\n        this.isLoading.attachmentRemove[attachmentId] = false;\n      })\n      .catch(reason => {\n        this.isLoading.attachmentRemove[attachmentId] = false;\n        this.showErrorModal(reason.Data);\n      })\n  }\n\n  attachmentFileChange(fileInput: any) {\n    let file = fileInput.target.files[0];\n    this.attachmentForm.controls['attachment'].setValue(file);\n  }\n\n  resetErrors() {\n    this.errors = {\n      attachment: ''\n    }\n  }\n\n  private showErrorModal(message: string, isNavigateBack: boolean = false) {\n    const initialState = {\n      closeCallback: () => {\n        if (isNavigateBack) {\n          this.location.back();\n        }\n      },\n      message: message\n    };\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Capstone/AgencyProjectManagement/Web/Angular/src/app/views/task/view/view.component.ts"],"sourceRoot":"webpack:///"}