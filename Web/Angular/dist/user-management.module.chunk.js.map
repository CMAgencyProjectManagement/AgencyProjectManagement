{"version":3,"sources":["D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/create-user/create-user.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/create-user/create-user.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/create-user/create-user.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/detail-user/detail-user.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/detail-user/detail-user.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/detail-user/detail-user.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-my-user/update-my-user.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-my-user/update-my-user.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-my-user/update-my-user.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-user/update-user.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-user/update-user.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-user/update-user.component.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/user-management-routing.module.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/user-management.module.ts","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/view-user/view-user.component.html","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/view-user/view-user.component.scss","D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/view-user/view-user.component.ts"],"names":[],"mappings":"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","file":"user-management.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Create account</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isLoadingPage\\\"></app-spinner>\\r\\n      <div class=\\\"card-body animated fadeIn\\\" *ngIf=\\\"!isLoadingPage\\\">\\r\\n        <div [formGroup]=\\\"signupForm\\\" class=\\\"form-horizontal col-6 \\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"username-input\\\">Username <span style=\\\"color: #ee0d0d\\\"><strong>*</strong></span></label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"username-input\\\" name=\\\"username-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.username}\\\"\\r\\n                formControlName=\\\"username\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.username\\\">{{errors.username}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"password-input\\\">Password <span style=\\\"color: #ee0d0d\\\"><strong>*</strong></span></label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"password\\\" id=\\\"password-input\\\" name=\\\"password-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.password}\\\"\\r\\n                formControlName=\\\"password\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.password\\\">{{errors.password}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"name-input\\\">Full name <span style=\\\"color: #ee0d0d\\\"><strong>*</strong></span></label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"name-input\\\" name=\\\"name-input\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.fullname}\\\"\\r\\n                formControlName=\\\"fullname\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.fullname\\\">{{errors.fullname}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"email-input\\\">Email <span style=\\\"color: #ee0d0d\\\"><strong>*</strong></span></label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"email\\\" id=\\\"email-input\\\" name=\\\"email-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.email}\\\" formControlName=\\\"email\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.email\\\">{{errors.email}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"phone-input\\\">Phone<span style=\\\"color: #ee0d0d\\\"><strong>*</strong></span></label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"phone-input\\\" name=\\\"phone-input\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.phone}\\\"\\r\\n                formControlName=\\\"phone\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.phone\\\">{{errors.phone}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"email-input\\\">Date of Birth</label>\\r\\n            <div class=\\\"col-8 datepicker-group\\\">\\r\\n              <my-date-picker #datepicker [options]=\\\"myDatePickerOptions\\\" formControlName=\\\"birthDate\\\" [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.birthdate}\\\"\\r\\n                required></my-date-picker>\\r\\n              <div class=\\\"invalid-feedback\\\" [ngStyle]=\\\"{'display':'block'}\\\" *ngIf=\\\"errors.birthdate\\\">{{errors.birthdate}}</div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"teams\\\">\\r\\n\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\">Department </label>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"team\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.team}\\\">\\r\\n                <option *ngFor=\\\"let team of teams\\\" value=\\\"{{team.id}}\\\">{{team.name}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.team\\\">{{errors.team}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"file-input\\\">Avatar</label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"file\\\" id=\\\"file-input\\\" name=\\\"file-input\\\" [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.avatar}\\\" (change)=\\\"avatarFileChange($event)\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.avatar\\\">{{errors.avatar}}</div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-actions text-center\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleCreate()\\\" [ladda]=\\\"isLoading\\\">\\r\\n                Save changes\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"signupForm.reset()\\\">Reset</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/create-user/create-user.component.html\n// module id = ../../../../../src/app/views/user-management/create-user/create-user.component.html\n// module chunks = user-management.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#dauSao {\\n  color: rgba(245, 7, 66, 0.89); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/create-user/create-user.component.scss\n// module id = ../../../../../src/app/views/user-management/create-user/create-user.component.scss\n// module chunks = user-management.module","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  OnInit\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {UserService} from '../../../services/user.service';\nimport {Cursor, StoreService} from '../../../services/tree.service';\nimport {UploadService} from '../../../services/upload.service';\nimport {Router} from '@angular/router';\n// import * as moment from 'moment';\nimport {IMyDpOptions} from 'mydatepicker';\nimport {Team} from '../../../interfaces/team';\nimport {TeamService} from '../../../services/team.service';\nimport {User} from '../../../interfaces/user';\n\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss']\n})\n\nexport class CreateUserComponent implements OnInit {\n  @ViewChild('datepicker') datepicker;\n  signupForm: FormGroup;\n  isLoading: boolean;\n  isLoadingPage: boolean;\n  errors: {\n    username: string,\n    password: string,\n    fullname: string,\n    email: string,\n    phone: string,\n    birthdate: string,\n    team: string,\n    avatar: string\n  };\n  teams: Team[];\n\n  // https://github.com/kekeh/mydatepicker\n  public myDatePickerOptions: IMyDpOptions = {\n    // other options...\n    dateFormat: 'dd/mm/yyyy',\n    showInputField: true,\n    openSelectorTopOfInput: true,\n    showTodayBtn: false\n  };\n\n  constructor(private userService: UserService,\n              private storeService: StoreService,\n              private teamService: TeamService,\n              private uploadService: UploadService,\n              private router: Router) {\n    this.isLoading = false;\n    this.isLoadingPage = true;\n    this.setErrorsNull();\n  }\n\n  ngOnInit() {\n    this.teamService.getAllTeam()\n      .then(value => {\n        this.teams = value;\n        this.isLoadingPage = false;\n      });\n    this.signupForm = new FormGroup({\n      username: new FormControl(undefined),\n      password: new FormControl(undefined),\n      fullname: new FormControl(undefined),\n      email: new FormControl(undefined),\n      phone: new FormControl(undefined),\n      birthDate: new FormControl(undefined),\n      team: new FormControl(undefined),\n      avatar: new FormControl(undefined)\n    })\n  }\n\n  handleCreate() {\n    this.setErrorsNull();\n    const formValue = this.signupForm.value;\n    this.isLoading = true;\n    let birthdate = formValue.birthDate ? formValue.birthDate.formatted : this.datepicker.selectionDayTxt;\n    this.userService.createUser(\n      formValue.username,\n      formValue.password,\n      formValue.fullname,\n      formValue.phone,\n      birthdate,\n      formValue.email,\n      formValue.team\n    ).then((value: any) => {\n      if (formValue.avatar) {\n        this.uploadAvatar(formValue.avatar, value.id)\n      } else {\n        this.isLoading = false;\n        this.setErrorsNull();\n        // show some form of success message here\n      }\n    }).catch(reason => {\n      this.isLoading = false;\n      this.handleCreateError(reason.Data);\n    })\n  }\n\n  uploadAvatar(file, userId) {\n    this.uploadService.uploadAvatarFile(file, userId)\n      .then(value => {\n        this.isLoading = false;\n      }).catch(reason => {\n      this.isLoading = false;\n      this.handleCreateError(reason.Data);\n    })\n  }\n\n  setErrorsNull(): void {\n    this.errors = {\n      username: '',\n      password: '',\n      fullname: '',\n      email: '',\n      phone: '',\n      birthdate: '',\n      team: '',\n      avatar: ''\n    };\n  }\n\n  avatarFileChange(fileInput: any) {\n    let file = fileInput.target.files[0];\n    this.signupForm.controls['avatar'].setValue(file);\n  }\n\n  handleCreateError(errors: any[]) {\n    if (errors) {\n      for (let error of errors) {\n        const fieldName = error.key;\n        const errorMessage = error.message;\n        switch (fieldName) {\n          case 'Username':\n            this.errors.username = errorMessage;\n            break;\n          case 'Password':\n            this.errors.password = errorMessage;\n            break;\n          case 'Name':\n            this.errors.fullname = errorMessage;\n            break;\n          case 'Phone':\n            this.errors.phone = errorMessage;\n            break;\n          case 'Birthdate':\n            this.errors.birthdate = errorMessage;\n            break;\n          case 'Email':\n            this.errors.email = errorMessage;\n            break;\n          case 'Team':\n            this.errors.team = errorMessage;\n            break;\n          case 'Avatar':\n            this.errors.avatar = errorMessage;\n            break;\n\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/create-user/create-user.component.ts","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Account detail</strong>\\r\\n  </div>\\r\\n  <app-spinner *ngIf=\\\"isLoadingPage\\\"></app-spinner>\\r\\n  <div class=\\\"card-body animated fadeIn\\\" *ngIf=\\\"!isLoadingPage\\\">\\r\\n    <div id=\\\"AvaAndDe\\\" class=\\\"row\\\" *ngIf=\\\"foundUser\\\">\\r\\n\\r\\n      <div id=\\\"left\\\" class=\\\"col-4\\\">\\r\\n        <img id=\\\"img\\\" *ngIf=\\\"foundUser\\\" src=\\\"{{foundUser.avatar}}\\\" height=\\\"100%\\\" width=\\\"100%\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        \\r\\n        <div id=\\\"name\\\" *ngIf=\\\"foundUser\\\" style=\\\"text-transform: uppercase; font-size: 30px; color: #3960A4\\\">\\r\\n          <strong>{{foundUser.name}}</strong>\\r\\n        </div>\\r\\n        <div id=\\\"team\\\" *ngIf=\\\"foundUser\\\" style=\\\"font-size: 30px\\\">\\r\\n          <a href=\\\"#/department/{{foundUser.team.id}}/detail\\\" *ngIf=\\\"foundUser.team\\\">{{foundUser.team.name}}</a>\\r\\n          <span *ngIf=\\\"!foundUser.team\\\" style=\\\"font-size: 25px\\\">No information</span>\\r\\n        </div>\\r\\n        <br/>\\r\\n        <div id=\\\"role\\\" *ngIf=\\\"foundUser\\\">\\r\\n          <div *ngIf=\\\"foundUser.isAdmin\\\">\\r\\n            <i class=\\\"fa fa-user-circle-o fa-lg\\\"></i>\\r\\n            <span style=\\\"font-size: 20px\\\"> &nbsp;&nbsp;&nbsp;Admin</span>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!foundUser.isAdmin && foundUser.isManager\\\">\\r\\n            <i class=\\\"fa fa-user-circle-o fa-lg\\\"></i>\\r\\n            <span style=\\\"font-size: 20px\\\"> &nbsp;&nbsp;&nbsp;Manager</span>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!foundUser.isAdmin && !foundUser.isManager\\\">\\r\\n            <i class=\\\"fa fa-user-circle-o fa-lg\\\"></i>\\r\\n            <span style=\\\"font-size: 20px\\\"> &nbsp;&nbsp;&nbsp;Staff</span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div id=\\\"ban\\\" *ngIf=\\\"foundUser\\\">\\r\\n          <div *ngIf=\\\"foundUser.isActive\\\">\\r\\n            <i class=\\\"fa fa-check fa-lg\\\"></i>\\r\\n            <span style=\\\"font-size: 20px;color: #3AA65B\\\"> &nbsp;&nbsp;&nbsp;Active</span>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!foundUser.isActive\\\">\\r\\n            <i class=\\\"fa fa-close fa-lg\\\"></i>\\r\\n            <span style=\\\"font-size: 20px;color: #CB0A0E\\\"> &nbsp;&nbsp;&nbsp;Banned</span>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n        <div id=\\\"phone\\\" *ngIf=\\\"foundUser\\\">\\r\\n          <i class=\\\"fa fa-phone fa-lg\\\"></i>\\r\\n          <span style=\\\"font-size: 20px\\\" *ngIf=\\\"foundUser.phone\\\"> &nbsp;&nbsp;&nbsp;{{foundUser.phone}}</span>\\r\\n          <span style=\\\"font-size: 20px\\\" *ngIf=\\\"!foundUser.phone\\\"> &nbsp;&nbsp;&nbsp;No information</span>\\r\\n        </div>\\r\\n        <div id=\\\"email\\\" *ngIf=\\\"foundUser\\\">\\r\\n          <i class=\\\"fa fa-envelope-o fa-lg\\\" ></i>\\r\\n          <span style=\\\"font-size: 20px\\\" *ngIf=\\\"foundUser.email\\\"> &nbsp;&nbsp;&nbsp;{{foundUser.email}}</span>\\r\\n          <span style=\\\"font-size: 20px\\\" *ngIf=\\\"!foundUser.email\\\"> &nbsp;&nbsp;&nbsp;No information</span>\\r\\n        </div>\\r\\n        <div>\\r\\n          <div id=\\\"birthdate\\\" *ngIf=\\\"foundUser\\\">\\r\\n            <i class=\\\"fa fa-birthday-cake fa-lg\\\"></i>\\r\\n            <span style=\\\"font-size: 20px\\\" *ngIf=\\\"foundUser.birthdate\\\"> &nbsp;&nbsp;&nbsp;{{foundUser.birthdate |date:'dd/MM/yyyy'}}</span>\\r\\n            <span style=\\\"font-size: 20px\\\" *ngIf=\\\"!foundUser.birthdate\\\"> &nbsp;&nbsp;&nbsp;No information</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"button-row\\\">\\r\\n            <a href=\\\"#/account/update/{{foundUser.id}}\\\" class=\\\"btn btn-primary bg-primary text-light\\\" style=\\\"font-size: 20px;margin-top: 10px;\\\" *ngIf=\\\"!match\\\">\\r\\n              <i class=\\\"fa fa-edit\\\"></i>&nbsp; Update\\r\\n            </a>\\r\\n            <a href=\\\"#/account/update\\\" class=\\\"btn btn-primary bg-primary text-light\\\" style=\\\"font-size: 20px;margin-top: 10px;\\\" *ngIf=\\\"match\\\">\\r\\n              <i class=\\\"fa fa-edit\\\"></i>&nbsp; Update\\r\\n            </a>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/detail-user/detail-user.component.html\n// module id = ../../../../../src/app/views/user-management/detail-user/detail-user.component.html\n// module chunks = user-management.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fa-lg {\\n  font-size: 2em;\\n  vertical-align: -15%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/detail-user/detail-user.component.scss\n// module id = ../../../../../src/app/views/user-management/detail-user/detail-user.component.scss\n// module chunks = user-management.module","import { Component, OnInit } from '@angular/core';\r\nimport { TeamService } from '../../../services/team.service';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { Team } from 'app/interfaces/team';\r\nimport { User } from 'app/interfaces/user';\r\nimport { StoreService } from '../../../services/tree.service';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-detail-user',\r\n  templateUrl: './detail-user.component.html',\r\n  styleUrls: ['./detail-user.component.scss']\r\n})\r\nexport class DetailUserComponent implements OnInit {\r\n  managementMode: boolean;\r\n  entity: any;\r\n  userID: number;\r\n  users: User[];\r\n  foundUser: User;\r\n  selectedUser = [];\r\n  isLoadingPage: boolean;\r\n  match: boolean;\r\n  currentUser: User;\r\n  teams: Team[];\r\n  constructor(\r\n    private teamService: TeamService,\r\n    private userService: UserService,\r\n    private storeService: StoreService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n  ) {\r\n    this.match = false;\r\n    this.isLoadingPage = true;\r\n    this.currentUser = this.storeService.get(['currentUser']) as User;\r\n    // this.managementMode = currentUser.isManager || currentUser.isAdmin;\r\n  }\r\n  ngOnInit() {\r\n    this.entity = {};\r\n    if (this.route.snapshot.paramMap.get('id') == undefined) {\r\n      this.match = true;\r\n      this.foundUser = this.currentUser;\r\n      this.isLoadingPage = false;\r\n    } else {\r\n      this.userID = Number(this.route.snapshot.paramMap.get('id'));\r\n      // if (this.userID == this.currentUser.id) {\r\n      //   this.match = true;\r\n      //   this.foundUser = this.currentUser;\r\n      // } else {\r\n      //   this.getAllTeam();\r\n      // }\r\n      this.teamService.getAllTeam().then(value => {\r\n        this.teams = value;\r\n      })\r\n      this.getAllTeam();\r\n    }\r\n\r\n  }\r\n\r\n  getAllTeam() {\r\n    this.userService.getAllUser()\r\n      .then(value => {\r\n        this.users = value;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n          if (this.users[i].id == this.userID) {\r\n            this.foundUser = this.users[i];\r\n            // this.selectedUser.push({\r\n            //   id: this.foundUser.id,\r\n            //   itemName: this.foundUser.name,\r\n            //   itemUsername: this.foundUser.username,\r\n            //   itemBirthday: this.foundUser.birthdate,\r\n            //   itemAvatar: this.foundUser.avatar,\r\n            //   itemPhone: this.foundUser.phone,\r\n            //   itemTeam: this.foundUser.team.name,\r\n            //   itemEmail: this.foundUser.email,\r\n            //   itemManager: this.foundUser.isManager,\r\n            //   itemAdmin: this.foundUser.isAdmin,\r\n            //   itemBan: this.foundUser.isActive,\r\n            // });\r\n          }\r\n        }\r\n        this.isLoadingPage = false;\r\n      })\r\n  }\r\n\r\n  GetURLParameter(sParam) {\r\n    var sPageURL = window.location.href;\r\n    if (sPageURL.indexOf('?') > 0) {\r\n      var sURLVariables = sPageURL.split('?');\r\n      var sTeam = sURLVariables[1].split('=');\r\n    } else {\r\n      return 0;\r\n    }\r\n    return sTeam[1];\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n    console.log(this.selectedUser);\r\n  }\r\n  OnItemDeSelect(item: any) {\r\n    console.log(item);\r\n    console.log(this.selectedUser);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n  onDeSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n  submitChange() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/detail-user/detail-user.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Update account</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isPageLoading\\\"></app-spinner>\\r\\n      <div class=\\\"card-body animated fadeIn\\\" *ngIf=\\\"!isPageLoading\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-4 col-form-label text-right\\\">Password </label>\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"openConfirmResetPassword()\\\" [ladda]=\\\"isResetPasswordLoading\\\">\\r\\n              Reset Password</button>\\r\\n            <div *ngIf=\\\"newpassword\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n              New password: {{newpassword}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-actions text-center\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"handleUpdate()\\\" [ladda]=\\\"isSavingChange\\\">\\r\\n              Save changes\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"setDefaultValue(foundUser)\\\">Reset</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-my-user/update-my-user.component.html\n// module id = ../../../../../src/app/views/user-management/update-my-user/update-my-user.component.html\n// module chunks = user-management.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-my-user/update-my-user.component.scss\n// module id = ../../../../../src/app/views/user-management/update-my-user/update-my-user.component.scss\n// module chunks = user-management.module","import { Component, OnInit } from '@angular/core';\r\nimport {BsModalService} from 'ngx-bootstrap';\r\nimport {Location} from '@angular/common';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ErrorModalComponent} from '../../../cmaComponents/modals';\r\nimport {UserService} from '../../../services/user.service';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {User} from 'app/interfaces/user';\r\n\r\n@Component({\r\n  selector: 'app-update-my-user',\r\n  templateUrl: './update-my-user.component.html',\r\n  styleUrls: ['./update-my-user.component.scss']\r\n})\r\nexport class UpdateMyUserComponent implements OnInit {\r\n  userId: number;\r\n  isPageLoading: boolean;\r\n  errorMessage: string;\r\n  foundUser: User;\r\n  errors: {\r\n    fullname: string,\r\n    birthdate: string,\r\n    password: string\r\n  };\r\n  isSavingChange: boolean;\r\n  updateForm: FormGroup;\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.isSavingChange = false;\r\n    this.isPageLoading = true;\r\n    this.setErrorsNull();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    if (Number(id)) {\r\n      this.userId = Number(id);\r\n    } else {\r\n      this.showErrorModal(`${id} is not a valid ID`);\r\n    }\r\n    this.updateForm = new FormGroup({\r\n      fullname: new FormControl(undefined),\r\n      birthdate: new FormControl(undefined),\r\n      password: new FormControl(undefined),\r\n    })\r\n  }\r\n\r\n  setErrorsNull(): void {\r\n    this.errors = {\r\n      password: '',\r\n      fullname: '',\r\n      birthdate: '',\r\n    };\r\n  }\r\n\r\n  private showErrorModal(message: string, isNavigateBack: boolean = false) {\r\n    const initialState = {\r\n      closeCallback: () => {\r\n        if (isNavigateBack) {\r\n          this.location.back();\r\n        }\r\n      },\r\n      message: message\r\n    };\r\n    this.modalService.show(ErrorModalComponent, {initialState, class: 'modal-dialog modal-danger'});\r\n  }\r\n\r\n  handleUpdate() {\r\n    this.setErrorsNull();\r\n    if (confirm('Save change ?')) {\r\n      this.isSavingChange = true;\r\n      const formValue = this.updateForm.value;\r\n      this.userService.updateUser(\r\n        this.foundUser.id,\r\n        formValue.phone,\r\n        formValue.email,\r\n        formValue.team,\r\n        formValue.isActive\r\n      ).then(value => {\r\n        this.isSavingChange = false;\r\n      }).catch(reason => {\r\n        this.errorMessage = reason.message;\r\n        let errors = reason.Data;\r\n        for (let error of errors) {\r\n          const fieldName = error.key;\r\n          const errorMessage = error.message;\r\n          switch (fieldName) {\r\n            case 'Password':\r\n              this.errors.password = errorMessage;\r\n              break;\r\n            case 'Name':\r\n              this.errors.fullname = errorMessage;\r\n              break;\r\n            case 'Birthdate':\r\n              this.errors.birthdate = errorMessage;\r\n              break;\r\n          }\r\n        }\r\n        this.isSavingChange = false;\r\n      })\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-my-user/update-my-user.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Update account</strong>\\r\\n      </div>\\r\\n       <app-spinner *ngIf=\\\"isPageLoading\\\"></app-spinner>\\r\\n      <div class=\\\"card-body animated fadeIn\\\" *ngIf=\\\"!isPageLoading\\\">\\r\\n        <div [formGroup]=\\\"updateForm\\\" class=\\\"form-horizontal col-6\\\">\\r\\n          <!--Fullname -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"!currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"fullname-input\\\">Fullname\\r\\n              <span style=\\\"color: #ee0d0d\\\">\\r\\n                <strong>*</strong>\\r\\n              </span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"fullname-input\\\" name=\\\"fullname-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.fullname}\\\"\\r\\n                formControlName=\\\"fullname\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.fullname\\\">{{errors.fullname}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"fullname-input\\\">Fullname\\r\\n              <span style=\\\"color: #ee0d0d\\\">\\r\\n                <strong>*</strong>\\r\\n              </span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"fullname-input\\\" name=\\\"fullname-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.fullname}\\\"\\r\\n                formControlName=\\\"fullname\\\" disabled=\\\"true\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.fullname\\\">{{errors.fullname}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--Birthdate -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"!currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"birthdate-input\\\">Birthdate\\r\\n              <span style=\\\"color: #ee0d0d\\\">\\r\\n                <strong>*</strong>\\r\\n              </span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8 datepicker-group\\\">\\r\\n              <my-date-picker #birthDatePicker [options]=\\\"myDatePickerOptions\\\" formControlName=\\\"birthdate\\\" [ngClass]=\\\"{'form-control': false, 'is-invalid': errors.birthdate}\\\"\\r\\n                required></my-date-picker>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.birthdate\\\">{{errors.birthdate}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--Password-->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"!currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"password-input\\\">Password</label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"password\\\" id=\\\"password-input\\\" name=\\\"password-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.password}\\\"\\r\\n              formControlName=\\\"password\\\">\\r\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.password\\\">{{errors.password}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--Email -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"email-input\\\">Email\\r\\n              <span style=\\\"color: #ee0d0d\\\">\\r\\n                <strong>*</strong>\\r\\n              </span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"email-input\\\" name=\\\"email-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.email}\\\" formControlName=\\\"email\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.email\\\">{{errors.email}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"!currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"email-input\\\">Email\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input disabled=\\\"true\\\" type=\\\"text\\\" id=\\\"email-input\\\" name=\\\"email-input\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.email}\\\"\\r\\n                formControlName=\\\"email\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.email\\\">{{errors.email}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Phone -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"phone-input\\\">Phone\\r\\n              <span style=\\\"color: #ee0d0d\\\">\\r\\n                <strong>*</strong>\\r\\n              </span>\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"phone-input\\\" name=\\\"phone-input\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.phone}\\\"\\r\\n                formControlName=\\\"phone\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.phone\\\">{{errors.phone}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"!currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\" for=\\\"phone-input\\\">Phone\\r\\n            </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <input disabled=\\\"true\\\" type=\\\"text\\\" id=\\\"phone-input\\\" name=\\\"phone-input\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.phone}\\\"\\r\\n                formControlName=\\\"phone\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.phone\\\">{{errors.phone}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Department -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"teams && currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\">Department</label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <select formControlName=\\\"team\\\" [ngClass]=\\\"{'form-control': true, 'is-invalid': errors.team}\\\">\\r\\n                <option *ngFor=\\\"let team of teams\\\" value=\\\"{{team.id}}\\\">{{team.name}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.team\\\">{{errors.team}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Status -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\">Active</label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <label class=\\\"switch switch-3d switch-primary\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" formControlName=\\\"isActive\\\">\\r\\n                <span class=\\\"switch-label\\\"></span>\\r\\n                <span class=\\\"switch-handle\\\"></span>\\r\\n              </label>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"errors.isActive\\\">{{errors.isActive}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Password -->\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"currentUser.isAdmin\\\">\\r\\n            <label class=\\\"col-4 col-form-label text-right\\\">Password </label>\\r\\n            <div class=\\\"col-8\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"openConfirmResetPassword()\\\" [ladda]=\\\"isResetPasswordLoading\\\">\\r\\n                Reset Password</button>\\r\\n              <div *ngIf=\\\"newpassword\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n                New password: {{newpassword}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-actions text-center\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"handleUpdate()\\\" [ladda]=\\\"isSavingChange\\\" style=\\\"margin-left: 30px;\\\">\\r\\n                Save changes\\r\\n              </button>\\r\\n              <button *ngIf=\\\"!currentUser.isAdmin\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\" onclick=\\\"location.href='#/account/profile'\\\" style=\\\"margin-left: 30px;width: 100px;\\\">Cancel</button>\\r\\n              <button *ngIf=\\\"currentUser.isAdmin\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\" onclick=\\\"location.href='#/account/view'\\\" style=\\\"margin-left: 30px;width: 100px;\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-user/update-user.component.html\n// module id = ../../../../../src/app/views/user-management/update-user/update-user.component.html\n// module chunks = user-management.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-user/update-user.component.scss\n// module id = ../../../../../src/app/views/user-management/update-user/update-user.component.scss\n// module chunks = user-management.module","import { Component, OnInit, TemplateRef, ViewContainerRef, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { User } from 'app/interfaces/user';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { Cursor, StoreService } from '../../../services/tree.service';\r\nimport { TeamService } from '../../../services/team.service';\r\nimport { Team } from '../../../interfaces/team';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ConfirmModalComponent } from '../../../cmaComponents/modals/confirm-modal/confirm-modal.component';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { currentId } from 'async_hooks';\r\n@Component({\r\n  selector: 'app-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styleUrls: ['./update-user.component.scss']\r\n})\r\nexport class UpdateUserComponent implements OnInit {\r\n  @ViewChild('birthDatePicker') birthDatePicker;\r\n  updateForm: FormGroup;\r\n  tokenCursor: Cursor;\r\n  newpassword: string;\r\n  isResetPasswordLoading: boolean;\r\n  isSavingChange: boolean;\r\n  isPageLoading: boolean;\r\n  errorMessage: string;\r\n  users: User[];\r\n  foundUser: User;\r\n  userID: number;\r\n  currentUser: User;\r\n  teams: Team[];\r\n  errors: {\r\n    fullname: string,\r\n    email: string,\r\n    phone: string,\r\n    birthdate: string,\r\n    team: string,\r\n    isActive: string,\r\n    password: string\r\n  };\r\n\r\n  constructor(private userService: UserService,\r\n    private storeService: StoreService,\r\n    private teamService: TeamService,\r\n    private modalService: BsModalService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private location: Location, ) {\r\n    this.updateForm = new FormGroup({\r\n      email: new FormControl(undefined),\r\n      phone: new FormControl(undefined),\r\n      team: new FormControl(undefined),\r\n      isActive: new FormControl(undefined),\r\n      fullname: new FormControl(undefined),\r\n      birthdate: new FormControl(undefined),\r\n      password: new FormControl(undefined),\r\n    })\r\n    this.users = [];\r\n    this.currentUser = this.storeService.get(['currentUser']) as User;\r\n    this.isPageLoading = true;\r\n    this.isResetPasswordLoading = false;\r\n    this.isSavingChange = false;\r\n    this.setErrorsNull();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.paramMap.get('id') == undefined) {\r\n      this.foundUser = this.currentUser;\r\n      // if (this.foundUser.team) {\r\n      //   this.teamService.getDetail(this.foundUser.team.id)\r\n      //     .then(value => {\r\n      //       this.teams = value;\r\n      //       this.updateLoadingState();\r\n      //     });\r\n      // } else {\r\n      //   this.teams = null;\r\n      //   this.updateLoadingState();\r\n      // }\r\n      this.setDefaultValue(this.foundUser);\r\n      this.isPageLoading=false;\r\n    } else {\r\n      this.userID = Number(this.route.snapshot.paramMap.get('id'));\r\n      this.teamService.getAllTeam()\r\n        .then(value => {\r\n          this.teams = value;\r\n        });\r\n      this.userService.getAllUser()\r\n        .then(value => {\r\n          this.users = value;\r\n          for (let i = 0; i < this.users.length; i++) {\r\n            if (this.users[i].id == this.userID) {\r\n              this.foundUser = this.users[i];\r\n              this.setDefaultValue(this.foundUser);\r\n              this.isPageLoading = false;\r\n            }\r\n          }\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  updateLoadingState() {\r\n    if (this.foundUser && this.teams) {\r\n      this.isPageLoading = false;\r\n    }\r\n  }\r\n\r\n  setDefaultValue(user: User) {\r\n    let birthdate = moment(user.birthdate);\r\n    this.updateForm.patchValue({\r\n      birthdate: {\r\n        date: {\r\n          year: birthdate.year(),\r\n          month: birthdate.month() + 1,\r\n          day: birthdate.date()\r\n        }\r\n      }\r\n    })\r\n    this.updateForm.controls['password'].setValue(user.password);\r\n    console.debug(user.password);\r\n    this.updateForm.controls['fullname'].setValue(user.name);\r\n    this.updateForm.controls['email'].setValue(user.email);\r\n    this.updateForm.controls['phone'].setValue(user.phone);\r\n    if (user.team != null) {\r\n      this.updateForm.controls['team'].setValue(user.team.id);\r\n    } else {\r\n      this.updateForm.controls['team'].setValue(0);\r\n    }\r\n    this.updateForm.controls['isActive'].setValue(user.isActive);\r\n  }\r\n\r\n  openConfirmResetPassword() {\r\n    const initialState = {\r\n      confirmCallback: () => {\r\n        this.resetPassword();\r\n      },\r\n      cancelCallback: () => {\r\n      },\r\n      message: `You are about to reset ${this.foundUser.name}'s password`\r\n    };\r\n    this.modalService.show(ConfirmModalComponent, { initialState });\r\n  }\r\n\r\n  resetPassword() {\r\n    this.isResetPasswordLoading = true;\r\n    this.userService.resetPassword(this.foundUser.id)\r\n      .then(value => {\r\n        this.newpassword = value.password;\r\n        this.isResetPasswordLoading = false;\r\n      })\r\n      .catch(reason => {\r\n        this.isResetPasswordLoading = false;\r\n        console.debug('resetPassword', reason);\r\n      })\r\n\r\n  }\r\n\r\n\r\n  GetURLParameter() {\r\n    let sPageURL = window.location.href;\r\n    let sURLVariables = sPageURL.split('?');\r\n    let sUsername = sURLVariables[1].split('=');\r\n    return sUsername[1];\r\n  }\r\n\r\n  setErrorsNull(): void {\r\n    this.errors = {\r\n      fullname: '',\r\n      email: '',\r\n      phone: '',\r\n      birthdate: '',\r\n      team: '',\r\n      isActive: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  handleUpdate() {\r\n    this.setErrorsNull();\r\n    // if (confirm('Save change ?')) {\r\n    //   this.isSavingChange = true;\r\n    //   const formValue = this.updateForm.value;\r\n    //   this.userService.updateUser(\r\n    //     this.foundUser.id,\r\n    //     formValue.phone,\r\n    //     formValue.email,\r\n    //     formValue.team,\r\n    //     formValue.isActive\r\n    //   ).then(value => {\r\n    //     this.isSavingChange = false;\r\n    //   }).catch(reason => {\r\n    //     this.errorMessage = reason.message;\r\n    //     let errors = reason.Data;\r\n    //     for (let error of errors) {\r\n    //       const fieldName = error.key;\r\n    //       const errorMessage = error.message;\r\n    //       switch (fieldName) {\r\n    //         case 'Username':\r\n    //           this.errors.username = errorMessage;\r\n    //           break;\r\n    //         case 'Password':\r\n    //           this.errors.password = errorMessage;\r\n    //           break;\r\n    //         case 'Name':\r\n    //           this.errors.fullname = errorMessage;\r\n    //           break;\r\n    //         case 'Phone':\r\n    //           this.errors.phone = errorMessage;\r\n    //           break;\r\n    //         case 'Birthdate':\r\n    //           this.errors.birthdate = errorMessage;\r\n    //           break;\r\n    //         case 'Email':\r\n    //           this.errors.email = errorMessage;\r\n    //           break;\r\n    //         case 'Team':\r\n    //           this.errors.team = errorMessage;\r\n    //           break;\r\n    //         case 'Avatar':\r\n    //           this.errors.avatar = errorMessage;\r\n    //           break;\r\n\r\n    //       }\r\n    //     }\r\n    //     this.isSavingChange = false;\r\n    //   })\r\n    // }\r\n    if (this.currentUser.isAdmin) {\r\n      const onConfirm = () => {\r\n        const formValue = this.updateForm.value;\r\n        this.isSavingChange = true;\r\n        this.userService.updateUser(\r\n          this.foundUser.id,\r\n          formValue.phone,\r\n          formValue.email,\r\n          formValue.team,\r\n          formValue.isActive,\r\n        )\r\n          .then(value => {\r\n            this.isSavingChange = false;\r\n            this.router.navigate(['account/view']);\r\n          })\r\n          .catch(reason => {\r\n            this.isSavingChange = false;\r\n            this.setErrors(reason.Data);\r\n          })\r\n      };\r\n      const initialState = {\r\n        message: `Are you sure to save these changes?`,\r\n        confirmCallback: onConfirm\r\n      };\r\n      this.modalService.show(ConfirmModalComponent, { initialState, class: 'modal-dialog' });\r\n    } else {\r\n      const onConfirm = () => {\r\n        let birthdate = moment(this.birthDatePicker.selectionDayTxt, 'DD/MM/YYYY');\r\n        const formValue = this.updateForm.value;\r\n        this.isSavingChange = true;\r\n        this.userService.updateProfile(\r\n          formValue.fullname,\r\n          birthdate.isValid() ? birthdate.format('YYYY-MM-DD') : this.birthDatePicker.selectionDayTxt,\r\n          formValue.password,\r\n        )\r\n          .then(value => {\r\n            this.isSavingChange = false;\r\n            this.router.navigate(['account/profile']);\r\n          })\r\n          .catch(reason => {\r\n            this.isSavingChange = false;\r\n            this.setErrors(reason.Data);\r\n          })\r\n      };\r\n      const initialState = {\r\n        message: `Are you sure to save these changes?`,\r\n        confirmCallback: onConfirm\r\n      };\r\n      this.modalService.show(ConfirmModalComponent, { initialState, class: 'modal-dialog' });\r\n    }\r\n  }\r\n\r\n  setErrors(errors: any[]) {\r\n    for (let error of errors) {\r\n      const fieldName = error.key;\r\n      const errorMessage = error.message;\r\n      switch (fieldName) {\r\n        case 'Email':\r\n          this.errors.email = errorMessage;\r\n          break;\r\n        case 'Phone':\r\n          this.errors.phone = errorMessage;\r\n          break;\r\n        case 'Department':\r\n          this.errors.team = errorMessage;\r\n          break;\r\n        case 'Birthdate':\r\n          this.errors.birthdate = errorMessage;\r\n          break;\r\n        case 'Fullname':\r\n          this.errors.fullname = errorMessage;\r\n          break;\r\n        case 'Password':\r\n          this.errors.password = errorMessage;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/update-user/update-user.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateUserComponent } from './create-user/create-user.component';\r\nimport { ViewUserComponent } from './view-user/view-user.component';\r\nimport { UpdateUserComponent } from './update-user/update-user.component';\r\nimport { DetailUserComponent } from './detail-user/detail-user.component';\r\nimport { UpdateMyUserComponent } from './update-my-user/update-my-user.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Account'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          title: 'View accounts'\r\n        },\r\n        path: 'view',\r\n        component: ViewUserComponent,\r\n      },\r\n      {\r\n        path: 'detail/:id',\r\n        component: DetailUserComponent,\r\n        data: {\r\n          title: 'Account detail'\r\n        }\r\n      },\r\n      {\r\n        path: ':id/detail',\r\n        component: DetailUserComponent,\r\n        data: {\r\n          title: 'Account detail'\r\n        }\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: DetailUserComponent,\r\n        data: {\r\n          title: 'Account detail'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Create account'\r\n        },\r\n        path: 'create',\r\n        component: CreateUserComponent\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Update account'\r\n        },\r\n        path: 'update',\r\n        component: UpdateUserComponent\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Update account'\r\n        },\r\n        path: 'update/:id',\r\n        component: UpdateUserComponent\r\n      },\r\n    ]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserManagementRoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/user-management-routing.module.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {UserManagementRoutingModule} from './user-management-routing.module';\r\nimport {CreateUserComponent} from './create-user/create-user.component';\r\nimport {ViewUserComponent} from './view-user/view-user.component';\r\nimport {UpdateUserComponent} from './update-user/update-user.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {LaddaModule} from 'angular2-ladda';\r\nimport {MyDatePickerModule} from 'mydatepicker';\r\nimport {DetailUserComponent} from './detail-user/detail-user.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport {SpinnerModule} from '../../components/spinner/spinner.module';\r\nimport {UpdateMyUserComponent} from './update-my-user/update-my-user.component';\r\nimport {CmaModule} from '../../cmaComponents/cma.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UserManagementRoutingModule,\r\n    ReactiveFormsModule,\r\n    LaddaModule.forRoot({\r\n      style: 'expand-left'\r\n    }),\r\n    FormsModule,\r\n    MyDatePickerModule,\r\n    DataTablesModule,\r\n    SpinnerModule,\r\n    CmaModule\r\n  ],\r\n  declarations: [\r\n    CreateUserComponent,\r\n    ViewUserComponent,\r\n    UpdateUserComponent,\r\n    DetailUserComponent,\r\n    UpdateMyUserComponent\r\n  ]\r\n})\r\nexport class UserManagementModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/user-management.module.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>View accounts</strong>\\r\\n      </div>\\r\\n      <app-spinner *ngIf=\\\"isPageLoading\\\"></app-spinner>\\r\\n      <div *ngIf=!isPageLoading class=\\\"card-body animated fadeIn\\\" >\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <span class=\\\"input-group-btn\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"search(searchUsername.value)\\\">\\r\\n              <i class=\\\"fa fa-search\\\"></i> Search\\r\\n            </button>\\r\\n          </span>\\r\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" (input)=\\\"search(searchUsername.value)\\\" #searchUsername>\\r\\n        </div>\\r\\n        <div class=\\\"dataTable-container hide-search\\\">\\r\\n          <table datatable [dtOptions]=\\\"datatableOptions\\\" class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n              <th>Avatar</th>\\r\\n              <th>Username</th>\\r\\n              <th>Full Name</th>\\r\\n              <th>Birthdate</th>\\r\\n              <th>Department</th>\\r\\n              <th>Role</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let user of users;let i = index\\\">\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <img *ngIf=\\\"user.avatar\\\" src=\\\"{{user.avatar}}\\\" class=\\\"avatar avatar-lg\\\">\\r\\n                <img *ngIf=\\\"!user.avatar\\\" src=\\\"/assets/img/100x100_avatar.png\\\" class=\\\"avatar avatar-lg\\\">\\r\\n              </td>\\r\\n              <td>\\r\\n                <a href=\\\"#/account/detail/{{user.id}}\\\">{{user.username}}</a>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p *ngIf=\\\"user.name\\\">{{user.name}}</p>\\r\\n                <p *ngIf=\\\"!user.name\\\">N/A</p>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p *ngIf=\\\"user.birthdate\\\">{{user.birthdate | date:'dd/MM/yyyy'}}</p>\\r\\n                <p *ngIf=\\\"!user.birthdate\\\">N/A</p>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p *ngIf=\\\"!user.team\\\">N/A</p>\\r\\n                <p *ngIf=\\\"user.team\\\">{{user.team.name}}</p>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <strong>\\r\\n                  <p *ngIf=\\\"user.isAdmin\\\">Admin</p>\\r\\n                </strong>\\r\\n                <strong>\\r\\n                  <p *ngIf=\\\"!user.isAdmin && user.isManager\\\">Manager</p>\\r\\n                </strong>\\r\\n                <p *ngIf=\\\"!user.isAdmin && !user.isManager\\\">Staff</p>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <p *ngIf=\\\"user.isActive\\\">\\r\\n                  Active\\r\\n                </p>\\r\\n                <p *ngIf=\\\"!user.isActive\\\">\\r\\n                  Banned\\r\\n                </p>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <a href=\\\"#/account/update/{{user.id}}\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Update</button>\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/view-user/view-user.component.html\n// module id = ../../../../../src/app/views/user-management/view-user/view-user.component.html\n// module chunks = user-management.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".table.table-bordered {\\n  margin-top: 1em; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/view-user/view-user.component.scss\n// module id = ../../../../../src/app/views/user-management/view-user/view-user.component.scss\n// module chunks = user-management.module","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {User} from 'app/interfaces/user';\nimport {DataTableDirective} from 'angular-datatables';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.scss']\n})\nexport class ViewUserComponent implements OnInit {\n  @ViewChild('searchUsername') input: ElementRef;\n  // all user\n  users: User[];\n  // https://datatables.net/reference/option/\n  isPageLoading: boolean;\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n  datatableOptions: DataTables.Settings = {\n    searching: true,\n    lengthChange: false,\n    columnDefs: [\n      {\n        searchable: false,\n        orderable: false,\n        targets: [0, 7]\n      }\n    ],\n    order: [\n      [6, 'desc']\n    ]\n  };\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private userService: UserService) {\n    this.isPageLoading = true;\n  }\n\n  ngOnInit() {\n    this.userService.getAllUser()\n      .then(value => {\n          this.users = value;\n          this.isPageLoading = false;\n        }\n      )\n  }\n\n  // search by username\n  search(searchStr: string) {\n    this.datatableElement.dtInstance.then(\n      (dtInstance: DataTables.Api) => dtInstance.search(searchStr).draw()\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/AgencyProjectManagement/Web/Angular/src/app/views/user-management/view-user/view-user.component.ts"],"sourceRoot":"webpack:///"}